{"version":3,"names":["createUserQuery","sdk","queryCreator","createApplicationUserListQuery","useUserList","options","query","useRef","error","setError","useState","loading","setLoading","refreshing","setRefreshing","users","setUsers","sortedUsers","useMemo","sortComparator","sort","upsertUser","useFreshCallback","user","draft","userIdx","findIndex","it","userId","push","deleteUser","splice","updateUsers","clearPrev","prev","concat","init","current","hasNext","next","catch","e","Logger","code","SBErrorCode","NON_AUTHORIZED","warn","SBErrorMessage","ACL","useAsyncEffect","refresh","nextUsers"],"sources":["useUserList.ts"],"sourcesContent":["import { useMemo, useRef, useState } from 'react';\n\nimport type { Optional, SendbirdChatSDK, SendbirdUser, UserStruct } from '@sendbird/uikit-utils';\nimport { Logger, SBErrorCode, SBErrorMessage, useAsyncEffect, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport type { CustomQueryInterface, UseUserListOptions, UseUserListReturn } from '../types';\n\nconst createUserQuery = <User extends UserStruct>(\n  sdk: SendbirdChatSDK,\n  queryCreator?: UseUserListOptions<User>['queryCreator'],\n) => {\n  if (queryCreator) return queryCreator();\n  // In order to use the API, the option must be turned on in the dashboard.\n  return sdk.createApplicationUserListQuery() as unknown as CustomQueryInterface<User>;\n};\n\n/**\n * Get user list from query.\n * default query uses 'instance.createApplicationUserListQuery'\n * The response type of hook is depends on return type of 'query.next()'\n *\n * You can call hook with your custom query using {@link CustomQuery}\n * Or you can create your 'CustomQueryClass' implemented {@link CustomQueryInterface}'\n *\n * ```example\n *  const { users } = useUserList(sdk, {\n *    queryCreator: () => {\n *      const friendQuery = sdk.createFriendListQuery();\n *      return new CustomQuery({\n *        next: () => friendQuery.next(),\n *        isLoading: () => friendQuery.isLoading,\n *        hasNext: () => friendQuery.hasMore,\n *      });\n *    }\n *  })\n * ```\n * */\nexport const useUserList = <\n  Options extends UseUserListOptions<QueriedUser>,\n  QueriedUser extends UserStruct = Options['queryCreator'] extends Optional<\n    () => CustomQueryInterface<infer User extends UserStruct>\n  >\n    ? User\n    : SendbirdUser,\n>(\n  sdk: SendbirdChatSDK,\n  options?: Options,\n): UseUserListReturn<QueriedUser> => {\n  const query = useRef<CustomQueryInterface<QueriedUser>>();\n\n  const [error, setError] = useState<unknown>(null);\n  const [loading, setLoading] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const [users, setUsers] = useState<QueriedUser[]>([]);\n  const sortedUsers = useMemo((): QueriedUser[] => {\n    if (options?.sortComparator) return users.sort(options.sortComparator);\n    return users;\n  }, [users, options?.sortComparator]);\n\n  const upsertUser = useFreshCallback((user: QueriedUser) => {\n    setUsers(([...draft]) => {\n      const userIdx = draft.findIndex((it) => it.userId === user.userId);\n      if (userIdx > -1) draft[userIdx] = user;\n      else draft.push(user);\n      return draft;\n    });\n  });\n\n  const deleteUser = useFreshCallback((userId: QueriedUser['userId']) => {\n    setUsers(([...draft]) => {\n      const userIdx = draft.findIndex((it) => it.userId === userId);\n      if (userIdx > -1) draft.splice(userIdx, 1);\n      return draft;\n    });\n  });\n\n  const updateUsers = (users: QueriedUser[], clearPrev: boolean) => {\n    if (clearPrev) setUsers(users);\n    else setUsers((prev) => prev.concat(users));\n  };\n\n  const init = useFreshCallback(async () => {\n    query.current = createUserQuery<QueriedUser>(sdk, options?.queryCreator);\n    if (query.current?.hasNext) {\n      const users = await query.current?.next().catch((e) => {\n        Logger.error(e);\n        if (e.code === SBErrorCode.NON_AUTHORIZED) Logger.warn(SBErrorMessage.ACL);\n        throw e;\n      });\n      updateUsers(users, true);\n    }\n  });\n\n  useAsyncEffect(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      await init();\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  const refresh = useFreshCallback(async () => {\n    setRefreshing(true);\n    setError(null);\n    try {\n      await init();\n    } catch (e) {\n      setError(e);\n    } finally {\n      setRefreshing(false);\n    }\n  });\n\n  const next = useFreshCallback(async () => {\n    if (query.current && query.current?.hasNext) {\n      const nextUsers = await query.current.next().catch((e) => {\n        Logger.error(e);\n        if (e.code === SBErrorCode.NON_AUTHORIZED) Logger.warn(SBErrorMessage.ACL);\n        throw e;\n      });\n      updateUsers(nextUsers, false);\n    }\n  });\n\n  return {\n    loading,\n    error,\n    users: sortedUsers,\n    upsertUser,\n    deleteUser,\n    next,\n    refreshing,\n    refresh,\n  };\n};\n"],"mappings":"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"}