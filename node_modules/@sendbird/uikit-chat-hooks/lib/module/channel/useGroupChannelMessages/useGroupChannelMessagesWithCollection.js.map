{"version":3,"names":["useCallback","useEffect","useRef","MessageCollectionInitPolicy","MessageEventSource","MessageFilter","Logger","confirmAndMarkAsRead","isDifferentChannel","useForceUpdate","useFreshCallback","useChannelHandler","useGroupChannelMessagesReducer","createMessageCollection","channel","creator","filter","limit","HOOK_NAME","useGroupChannelMessagesWithCollection","sdk","userId","options","forceUpdate","collectionRef","loading","refreshing","messages","nextMessages","newMessagesFromMembers","updateMessages","updateNextMessages","deleteNextMessages","deleteMessages","updateLoading","updateRefreshing","sortComparator","channelMarkAsRead","source","EVENT_MESSAGE_RECEIVED","EVENT_MESSAGE_SENT_SUCCESS","SYNC_MESSAGE_FILL","undefined","e","warn","init","uid","callback","current","dispose","collectionCreator","currentUser","setMessageCollectionHandler","onMessagesAdded","_","__","onMessagesUpdated","nextMessageIds","map","it","messageId","nonAddedMessagesFromReceivedEvent","indexOf","onMessagesDeleted","messageIds","onChannelDeleted","onChannelUpdated","eventChannel","isGroupChannel","onHugeGapDetected","initialize","CACHE_AND_REPLACE_BY_API","onCacheResult","err","isCacheEnabled","error","debug","length","pendingMessages","failedMessages","onApiResult","url","onUserBanned","bannedUser","setTimeout","refresh","prev","hasPrevious","list","loadPrevious","next","messageCandidates","hasNext","fetchedList","loadNext","push","sendUserMessage","params","onPending","Promise","resolve","reject","pendingMessage","isUserMessage","onSucceeded","sentMessage","onFailed","_failedMessage","sendFileMessage","isFileMessage","updateUserMessage","updatedMessage","updateFileMessage","resendMessage","failedMessage","resentMessage","resendUserMessage","resendFileMessage","deleteMessage","message","sendingStatus","removeFailedMessage","reqId"],"sources":["useGroupChannelMessagesWithCollection.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\nimport { MessageCollectionInitPolicy, MessageEventSource, MessageFilter } from '@sendbird/chat/groupChannel';\nimport type {\n  SendbirdBaseMessage,\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdMessageCollection,\n} from '@sendbird/uikit-utils';\nimport {\n  Logger,\n  confirmAndMarkAsRead,\n  isDifferentChannel,\n  useForceUpdate,\n  useFreshCallback,\n} from '@sendbird/uikit-utils';\n\nimport { useChannelHandler } from '../../handler/useChannelHandler';\nimport type { UseGroupChannelMessages, UseGroupChannelMessagesOptions } from '../../types';\nimport { useGroupChannelMessagesReducer } from './reducer';\n\nconst createMessageCollection = (\n  channel: SendbirdGroupChannel,\n  creator?: UseGroupChannelMessagesOptions['collectionCreator'],\n) => {\n  if (creator) return creator();\n  const filter = new MessageFilter();\n  return channel.createMessageCollection({ filter, limit: 100 });\n};\n\nconst HOOK_NAME = 'useGroupChannelMessagesWithCollection';\n\nexport const useGroupChannelMessagesWithCollection: UseGroupChannelMessages = (sdk, channel, userId, options) => {\n  const forceUpdate = useForceUpdate();\n  const collectionRef = useRef<SendbirdMessageCollection>();\n\n  const {\n    loading,\n    refreshing,\n    messages,\n    nextMessages,\n    newMessagesFromMembers,\n    updateMessages,\n    updateNextMessages,\n    deleteNextMessages,\n    deleteMessages,\n    updateLoading,\n    updateRefreshing,\n  } = useGroupChannelMessagesReducer(userId, options?.sortComparator);\n\n  const channelMarkAsRead = async (source?: MessageEventSource) => {\n    try {\n      switch (source) {\n        case MessageEventSource.EVENT_MESSAGE_RECEIVED:\n        case MessageEventSource.EVENT_MESSAGE_SENT_SUCCESS:\n        case MessageEventSource.SYNC_MESSAGE_FILL:\n        case undefined:\n          await confirmAndMarkAsRead([channel]);\n          break;\n      }\n    } catch (e) {\n      Logger.warn(`[${HOOK_NAME}/channelMarkAsRead]`, e);\n    }\n  };\n\n  const init = useCallback(\n    async (uid?: string, callback?: () => void) => {\n      if (collectionRef.current) collectionRef.current?.dispose();\n\n      if (uid) {\n        collectionRef.current = createMessageCollection(channel, options?.collectionCreator);\n        updateNextMessages([], true, sdk.currentUser.userId);\n        channelMarkAsRead();\n\n        collectionRef.current?.setMessageCollectionHandler({\n          onMessagesAdded: (_, __, messages) => {\n            channelMarkAsRead(_.source);\n            updateNextMessages(messages, false, sdk.currentUser.userId);\n          },\n          onMessagesUpdated: (_, __, messages) => {\n            channelMarkAsRead(_.source);\n\n            // NOTE: admin message is not added via onMessagesAdded handler, not checked yet is this a bug.\n            if (_.source === MessageEventSource.EVENT_MESSAGE_RECEIVED) {\n              const nextMessageIds = nextMessages.map((it) => it.messageId);\n              const nonAddedMessagesFromReceivedEvent = messages.filter(\n                (it) => nextMessageIds.indexOf(it.messageId) === -1,\n              );\n              updateNextMessages(nonAddedMessagesFromReceivedEvent, false, sdk.currentUser.userId);\n            }\n\n            // NOTE: v4 MESSAGE_RECEIVED is called twice from onMessagesAdded and onMessagesUpdated when receiving new message.\n            //  This is not intended behavior but not bugs.\n            if (_.source !== MessageEventSource.EVENT_MESSAGE_RECEIVED) {\n              updateMessages(messages, false, sdk.currentUser.userId);\n            }\n          },\n          onMessagesDeleted: (_, __, messageIds) => {\n            deleteMessages(messageIds, []);\n            deleteNextMessages(messageIds, []);\n          },\n          onChannelDeleted: () => {\n            options?.onChannelDeleted?.();\n          },\n          onChannelUpdated: (_, eventChannel) => {\n            if (eventChannel.isGroupChannel() && !isDifferentChannel(eventChannel, channel)) {\n              forceUpdate();\n            }\n          },\n          onHugeGapDetected: () => {\n            init(uid);\n          },\n        });\n\n        collectionRef.current\n          .initialize(MessageCollectionInitPolicy.CACHE_AND_REPLACE_BY_API)\n          .onCacheResult((err, messages) => {\n            if (err) sdk.isCacheEnabled && Logger.error(`[${HOOK_NAME}/onCacheResult]`, err);\n            else {\n              Logger.debug(`[${HOOK_NAME}/onCacheResult]`, 'message length:', messages.length);\n\n              updateMessages(messages, true, sdk.currentUser.userId);\n              updateMessages(collectionRef.current?.pendingMessages ?? [], false, sdk.currentUser.userId);\n              updateMessages(collectionRef.current?.failedMessages ?? [], false, sdk.currentUser.userId);\n            }\n            callback?.();\n          })\n          .onApiResult((err, messages) => {\n            if (err) Logger.warn(`[${HOOK_NAME}/onApiResult]`, err);\n            else {\n              Logger.debug(`[${HOOK_NAME}/onApiResult]`, 'message length:', messages.length);\n\n              updateMessages(messages, true, sdk.currentUser.userId);\n              if (sdk.isCacheEnabled) {\n                updateMessages(collectionRef.current?.pendingMessages ?? [], false, sdk.currentUser.userId);\n                updateMessages(collectionRef.current?.failedMessages ?? [], false, sdk.currentUser.userId);\n              }\n            }\n            callback?.();\n          });\n      }\n    },\n    [sdk, channel.url, options?.collectionCreator],\n  );\n\n  useChannelHandler(sdk, HOOK_NAME, {\n    onUserBanned(channel, bannedUser) {\n      if (channel.isGroupChannel() && !isDifferentChannel(channel, channel)) {\n        if (bannedUser.userId === sdk.currentUser.userId) {\n          options?.onChannelDeleted?.();\n        } else {\n          forceUpdate();\n        }\n      }\n    },\n  });\n\n  useEffect(() => {\n    // NOTE: Cache read is heavy task, and it prevents smooth ui transition\n    setTimeout(async () => {\n      updateLoading(true);\n      init(userId, () => updateLoading(false));\n    }, 0);\n  }, [init, userId]);\n\n  useEffect(() => {\n    return () => {\n      if (collectionRef.current) collectionRef.current?.dispose();\n    };\n  }, []);\n\n  const refresh: ReturnType<UseGroupChannelMessages>['refresh'] = useFreshCallback(async () => {\n    updateRefreshing(true);\n    init(userId, () => updateRefreshing(false));\n  });\n\n  const prev: ReturnType<UseGroupChannelMessages>['prev'] = useFreshCallback(async () => {\n    if (collectionRef.current && collectionRef.current?.hasPrevious) {\n      try {\n        const list = await collectionRef.current?.loadPrevious();\n        updateMessages(list, false, sdk.currentUser.userId);\n      } catch {}\n    }\n  });\n\n  const next: ReturnType<UseGroupChannelMessages>['next'] = useFreshCallback(async () => {\n    const messageCandidates: SendbirdBaseMessage[] = [];\n\n    if (collectionRef.current && collectionRef.current?.hasNext) {\n      try {\n        const fetchedList = await collectionRef.current?.loadNext();\n        messageCandidates.push(...fetchedList);\n      } catch {}\n    }\n\n    if (nextMessages.length > 0) {\n      messageCandidates.push(...nextMessages);\n    }\n\n    if (messageCandidates.length > 0) {\n      updateMessages(messageCandidates, false, sdk.currentUser.userId);\n      updateNextMessages([], true, sdk.currentUser.userId);\n    }\n  });\n\n  const sendUserMessage: ReturnType<UseGroupChannelMessages>['sendUserMessage'] = useFreshCallback(\n    (params, onPending) => {\n      return new Promise((resolve, reject) => {\n        channel\n          .sendUserMessage(params)\n          .onPending((pendingMessage) => {\n            if (pendingMessage.isUserMessage()) {\n              onPending?.(pendingMessage);\n              updateMessages([pendingMessage], false, sdk.currentUser.userId);\n            }\n          })\n          .onSucceeded((sentMessage) => {\n            if (sentMessage.isUserMessage()) {\n              updateMessages([sentMessage], false, sdk.currentUser.userId);\n              resolve(sentMessage);\n            }\n          })\n          .onFailed((err, _failedMessage) => {\n            // updateMessages([failedMessage], false, sdk.currentUser.userId);\n            reject(err);\n          });\n      });\n    },\n  );\n  const sendFileMessage: ReturnType<UseGroupChannelMessages>['sendFileMessage'] = useFreshCallback(\n    (params, onPending) => {\n      return new Promise((resolve, reject) => {\n        channel\n          .sendFileMessage(params)\n          .onPending((pendingMessage) => {\n            if (pendingMessage.isFileMessage()) {\n              updateMessages([pendingMessage], false, sdk.currentUser.userId);\n              onPending?.(pendingMessage);\n            }\n          })\n          .onSucceeded((sentMessage) => {\n            if (sentMessage.isFileMessage()) {\n              updateMessages([sentMessage], false, sdk.currentUser.userId);\n              resolve(sentMessage as SendbirdFileMessage);\n            }\n          })\n          .onFailed((err, _failedMessage) => {\n            // updateMessages([failedMessage], false, sdk.currentUser.userId);\n            reject(err);\n          });\n      });\n    },\n  );\n  const updateUserMessage: ReturnType<UseGroupChannelMessages>['updateUserMessage'] = useFreshCallback(\n    async (messageId, params) => {\n      const updatedMessage = await channel.updateUserMessage(messageId, params);\n      updateMessages([updatedMessage], false, sdk.currentUser.userId);\n      return updatedMessage;\n    },\n  );\n  const updateFileMessage: ReturnType<UseGroupChannelMessages>['updateFileMessage'] = useFreshCallback(\n    async (messageId, params) => {\n      const updatedMessage = await channel.updateFileMessage(messageId, params);\n      updateMessages([updatedMessage], false, sdk.currentUser.userId);\n      return updatedMessage;\n    },\n  );\n  const resendMessage: ReturnType<UseGroupChannelMessages>['resendMessage'] = useFreshCallback(\n    async (failedMessage) => {\n      const resentMessage = await (() => {\n        if (failedMessage.isUserMessage()) return channel.resendUserMessage(failedMessage);\n        if (failedMessage.isFileMessage()) return channel.resendFileMessage(failedMessage);\n        return null;\n      })();\n\n      if (resentMessage) updateMessages([resentMessage], false, sdk.currentUser.userId);\n    },\n  );\n  const deleteMessage: ReturnType<UseGroupChannelMessages>['deleteMessage'] = useFreshCallback(async (message) => {\n    if (message.sendingStatus === 'succeeded') {\n      if (message.isUserMessage()) await channel.deleteMessage(message);\n      if (message.isFileMessage()) await channel.deleteMessage(message);\n    } else {\n      try {\n        await collectionRef.current?.removeFailedMessage(message.reqId);\n      } finally {\n        deleteMessages([message.messageId], [message.reqId]);\n      }\n    }\n  });\n\n  return {\n    loading,\n    refreshing,\n    refresh,\n    messages,\n    nextMessages,\n    newMessagesFromMembers,\n    next,\n    prev,\n    sendUserMessage,\n    sendFileMessage,\n    updateUserMessage,\n    updateFileMessage,\n    resendMessage,\n    deleteMessage,\n  };\n};\n"],"mappings":"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"}