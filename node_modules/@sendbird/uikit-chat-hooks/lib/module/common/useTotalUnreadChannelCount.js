import { useState } from 'react';
import { truncatedCount, useAsyncEffect } from '@sendbird/uikit-utils';
import { useUniqId } from '@sendbird/uikit-utils';
import { useUserEventHandler } from '../handler/useUserEventHandler';
const HOOK_NAME = 'useTotalUnreadChannelCount';
export const useTotalUnreadChannelCount = (sdk, params) => {
  const id = useUniqId(HOOK_NAME);
  const [unreadChannelCount, setUnreadChannelCount] = useState(0);
  useAsyncEffect(async () => {
    setUnreadChannelCount(await sdk.groupChannel.getTotalUnreadChannelCount());
  }, [sdk]);
  useUserEventHandler(sdk, HOOK_NAME + id, {
    onTotalUnreadMessageCountUpdated: async () => {
      setUnreadChannelCount(await sdk.groupChannel.getTotalUnreadChannelCount());
    }
  });
  return truncatedCount(unreadChannelCount, params === null || params === void 0 ? void 0 : params.maxCount);
};
//# sourceMappingURL=useTotalUnreadChannelCount.js.map