/**
 * Converts a given string to a hashed string.
 * */
export declare function hash(str: string): string;
/**
 * Replace a specific range of text in the string with another text.
 * */
export declare function replace(str: string, start: number, end: number, text: string): string;
/**
 * Returns the value corresponding to the first true index of a given condition array.
 * */
export declare function conditionChaining<T, V>(conditions: T[], values: V[]): V;
/**
 * Calculates the downscale size.
 * */
type Size = {
    width: number;
    height: number;
};
export declare function getDownscaleSize(origin: Size, resizing: Partial<Size>): {
    width: number;
    height: number;
};
export declare function isImage(filePath: string, mimeType?: string): boolean;
export declare function shouldCompressImage(filePath: string, compressionEnabled?: boolean): boolean;
export {};
