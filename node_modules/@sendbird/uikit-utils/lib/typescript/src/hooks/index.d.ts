import type { DependencyList } from 'react';
type Destructor = () => void;
type AsyncEffectCallback = () => void | Destructor | Promise<void> | Promise<Destructor>;
export declare const useUniqId: (key: string) => number;
export declare const useForceUpdate: () => () => void;
export declare const useAsyncEffect: (asyncEffect: AsyncEffectCallback, deps?: DependencyList) => void;
export declare const useAsyncLayoutEffect: (asyncEffect: AsyncEffectCallback, deps?: DependencyList) => void;
export declare const useIIFE: <T>(callback: () => T) => T;
export declare const useIsMountedRef: () => import("react").MutableRefObject<boolean>;
export declare const useIsFirstMount: () => boolean;
export declare const useFreshCallback: <T extends (...args: any[]) => any>(callback: T) => T;
export {};
