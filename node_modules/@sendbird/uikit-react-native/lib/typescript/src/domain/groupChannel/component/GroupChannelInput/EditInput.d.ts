import React from 'react';
import { NativeSyntheticEvent, TextInput as RNTextInput, TextInputSelectionChangeEventData } from 'react-native';
import { MentionType } from '@sendbird/chat/message';
import type { SendbirdFileMessage, SendbirdUserMessage } from '@sendbird/uikit-utils';
import type { MentionedUser } from '../../../../types';
declare const EditInput: React.ForwardRefExoticComponent<{
    shouldRenderInput: boolean;
    onSendFileMessage: (file: import("../../../..").FileType) => Promise<void>;
    onSendUserMessage: (text: string, mention?: Required<{
        messageTemplate: string | undefined;
        userIds: string[] | undefined;
        type: MentionType | undefined;
    }> | undefined) => Promise<void>;
    onUpdateFileMessage: (editedFile: import("../../../..").FileType, message: import("@sendbird/chat/message").FileMessage) => Promise<void>;
    onUpdateUserMessage: (editedText: string, message: import("@sendbird/chat/message").UserMessage, mention?: Required<{
        messageTemplate: string | undefined;
        userIds: string[] | undefined;
        type: MentionType | undefined;
    }> | undefined) => Promise<void>;
    SuggestedMentionList: (props: {
        text: string;
        selection: import("../../../../types").Range;
        topInset: number;
        bottomInset: number;
        inputHeight: number;
        onPressToMention: (user: import("@sendbird/chat/groupChannel").Member, searchStringRange: import("../../../../types").Range) => void;
        mentionedUsers: MentionedUser[];
    }) => JSX.Element | null;
} & {
    text: string;
    onChangeText: (val: string) => void;
    messageToEdit: SendbirdUserMessage | SendbirdFileMessage;
    setMessageToEdit: (msg?: SendbirdUserMessage | SendbirdFileMessage) => void;
    onSelectionChange: (e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => void;
    disabled: boolean;
    autoFocus: boolean;
    mentionedUsers: MentionedUser[];
} & React.RefAttributes<RNTextInput>>;
export default EditInput;
