{"version":3,"names":["useMentionTextInput","params","mentionManager","useSendbirdChat","mentionedUsersRef","useRef","textInputRef","text","setText","useState","selection","setSelection","start","end","useEffect","shouldUseMentionedMessageTemplate","messageToEdit","result","templateToTextAndMentionedUsers","mentionedMessageTemplate","mentionedUsers","current","mentionedText","isUserMessage","message","onChangeText","useFreshCallback","_nextText","addedMentionedUser","prevText","nextText","offset","length","push","reconcileRangeOfMentionedUsers","filtered","lastSelection","removeMentionedUsersInSelection","Math","max","foundIndex","findIndex","it","rangeHelpers","overlaps","range","remainderLength","replace","splice","onSelectionChange","e","nativeSelection","nativeEvent","setTimeout","mentionedUser","find","selectionBlock","setNativeProps","Platform","OS"],"sources":["useMentionTextInput.ts"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport type { NativeSyntheticEvent, TextInput, TextInputSelectionChangeEventData } from 'react-native';\nimport { Platform } from 'react-native';\n\nimport { SendbirdFileMessage, SendbirdUserMessage, replace, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport type { MentionedUser } from '../types';\nimport { useSendbirdChat } from './useContext';\n\nconst useMentionTextInput = (params: { messageToEdit?: SendbirdUserMessage | SendbirdFileMessage }) => {\n  const { mentionManager } = useSendbirdChat();\n\n  const mentionedUsersRef = useRef<MentionedUser[]>([]);\n  const textInputRef = useRef<TextInput>();\n\n  const [text, setText] = useState('');\n  const [selection, setSelection] = useState({ start: 0, end: 0 });\n\n  // TODO: Refactor text edit logic more clearly\n  useEffect(() => {\n    if (mentionManager.shouldUseMentionedMessageTemplate(params.messageToEdit)) {\n      const result = mentionManager.templateToTextAndMentionedUsers(\n        params.messageToEdit.mentionedMessageTemplate,\n        params.messageToEdit.mentionedUsers,\n      );\n\n      mentionedUsersRef.current = result.mentionedUsers;\n      setText(result.mentionedText);\n    } else {\n      mentionedUsersRef.current = [];\n      if (params.messageToEdit?.isUserMessage()) {\n        setText(params.messageToEdit.message);\n      }\n    }\n  }, [params.messageToEdit]);\n\n  const onChangeText = useFreshCallback((_nextText: string, addedMentionedUser?: MentionedUser) => {\n    const prevText = text;\n    let nextText = _nextText;\n    let offset = nextText.length - prevText.length;\n\n    // Text clear\n    if (nextText === '') {\n      mentionedUsersRef.current = [];\n    }\n    // Text add\n    else if (offset > 0) {\n      /** Add mentioned user **/\n      if (addedMentionedUser) mentionedUsersRef.current.push(addedMentionedUser);\n\n      /** Reconcile mentioned users range on the right side of the selection **/\n      mentionedUsersRef.current = mentionManager.reconcileRangeOfMentionedUsers(\n        offset,\n        selection.end,\n        mentionedUsersRef.current,\n      );\n    }\n    // Text remove\n    else if (offset < 0) {\n      // Ranged remove\n      if (selection.start !== selection.end) {\n        /** Filter mentioned users in selection range **/\n        const { filtered, lastSelection } = mentionManager.removeMentionedUsersInSelection(\n          selection,\n          mentionedUsersRef.current,\n        );\n\n        /** Reconcile mentioned users range on the right side of the selection **/\n        mentionedUsersRef.current = mentionManager.reconcileRangeOfMentionedUsers(\n          offset,\n          Math.max(selection.end, lastSelection),\n          filtered,\n        );\n      }\n      // Single remove\n      else {\n        /** Find mentioned user who ranges in removed selection **/\n        const foundIndex = mentionedUsersRef.current.findIndex((it) =>\n          mentionManager.rangeHelpers.overlaps(it.range, selection, 'underMore'),\n        );\n        /** If found, remove from the mentioned user list and remove remainder text **/\n        if (foundIndex > -1) {\n          const it = mentionedUsersRef.current[foundIndex];\n          const remainderLength = it.range.end - it.range.start + offset;\n\n          offset = -remainderLength + offset;\n          nextText = replace(nextText, it.range.start, it.range.start + remainderLength, '');\n\n          mentionedUsersRef.current.splice(foundIndex, 1);\n        }\n\n        /** Reconcile mentioned users range on the right side of the selection **/\n        mentionedUsersRef.current = mentionManager.reconcileRangeOfMentionedUsers(\n          offset,\n          selection.end,\n          mentionedUsersRef.current,\n        );\n      }\n    }\n\n    setText(nextText);\n  });\n\n  return {\n    textInputRef,\n    selection,\n    onSelectionChange: useFreshCallback((e: NativeSyntheticEvent<TextInputSelectionChangeEventData>) => {\n      const nativeSelection = { ...e.nativeEvent.selection };\n\n      // NOTE: To synchronize call onSelectionChange after onChangeText called on each platform.\n      setTimeout(() => {\n        const mentionedUser = mentionedUsersRef.current.find((it) =>\n          mentionManager.rangeHelpers.overlaps(it.range, nativeSelection),\n        );\n\n        // Selection should be blocked if changed into mentioned area\n        if (mentionedUser) {\n          const selectionBlock = { start: mentionedUser.range.start, end: mentionedUser.range.end };\n          textInputRef.current?.setNativeProps({ selection: selectionBlock });\n          // BUG: setNativeProps called again when invoked onChangeText\n          //  https://github.com/facebook/react-native/issues/33520\n          if (Platform.OS === 'android') {\n            setTimeout(() => {\n              textInputRef.current?.setNativeProps({ selection: { start: 0 } });\n            }, 250);\n          }\n          setSelection(selectionBlock);\n        } else {\n          setSelection(nativeSelection);\n        }\n      }, 10);\n    }),\n    text,\n    onChangeText,\n    mentionedUsers: mentionedUsersRef.current,\n  };\n};\n\nexport default useMentionTextInput;\n"],"mappings":"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"}