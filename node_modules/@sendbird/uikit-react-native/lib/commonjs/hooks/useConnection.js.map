{"version":3,"names":["cacheRestrictCodes","useConnection","sdk","emojiManager","setCurrentUser","features","useSendbirdChat","registerPushTokenForCurrentUser","unregisterPushTokenForCurrentUser","usePushTokenRegistration","connect","useCallback","userId","opts","Logger","debug","user","accessToken","nickname","updateCurrentUserInfo","then","updatedUser","catch","e","warn","useUserIdForNicknameEnabled","autoPushTokenRegistrationEnabled","getAllEmoji","init","error","isCacheEnabled","some","code","message","clearCachedData","currentUser","finally","disconnect","undefined","reconnect"],"sources":["useConnection.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { Logger, SendbirdError, SendbirdUser } from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from './useContext';\nimport usePushTokenRegistration from './usePushTokenRegistration';\n\ntype ConnectOptions = { nickname?: string; accessToken?: string };\nconst cacheRestrictCodes = [400300, 400301, 400302, 400310];\n\nconst useConnection = () => {\n  const { sdk, emojiManager, setCurrentUser, features } = useSendbirdChat();\n  const { registerPushTokenForCurrentUser, unregisterPushTokenForCurrentUser } = usePushTokenRegistration();\n\n  const connect = useCallback(\n    async (userId: string, opts?: ConnectOptions): Promise<SendbirdUser> => {\n      try {\n        Logger.debug('[useConnection]', 'connect start:', userId);\n        let user = await sdk.connect(userId, opts?.accessToken);\n\n        if (opts?.nickname) {\n          Logger.debug('[useConnection]', 'nickname-sync start:', opts.nickname);\n          await sdk\n            .updateCurrentUserInfo({ nickname: opts.nickname })\n            .then((updatedUser) => (user = updatedUser))\n            .catch((e) => Logger.warn('[useConnection]', 'nickname-sync failure', e));\n        } else if (features.useUserIdForNicknameEnabled) {\n          await sdk.updateCurrentUserInfo({ nickname: userId }).then((updatedUser) => (user = updatedUser));\n        }\n\n        if (features.autoPushTokenRegistrationEnabled) {\n          Logger.debug('[useConnection]', 'autoPushTokenRegistration enabled, register for current user');\n          await registerPushTokenForCurrentUser().catch((e) => {\n            Logger.warn('[useConnection]', 'autoPushToken Registration failure', e);\n          });\n        }\n\n        Logger.debug('[useConnection]', 'connected! (online)');\n        setCurrentUser(user);\n        sdk.getAllEmoji().then(emojiManager.init);\n\n        return user;\n      } catch (e) {\n        const error = e as unknown as SendbirdError;\n\n        if (sdk.isCacheEnabled) {\n          if (cacheRestrictCodes.some((code) => error.code === code)) {\n            Logger.warn('[useConnection]', 'offline connect restricted', error.message, error.code);\n            Logger.warn('[useConnection]', 'clear cached-data');\n            await sdk.clearCachedData().catch((e) => Logger.warn('[useConnection]', 'clear cached-data failure', e));\n          } else if (sdk.currentUser) {\n            Logger.debug('[useConnection]', 'connected! (offline)');\n            setCurrentUser(sdk.currentUser);\n            sdk.getAllEmoji().finally(emojiManager.init);\n            return sdk.currentUser;\n          }\n        }\n\n        Logger.warn('[useConnection]', 'connect failure', error.message, error.code);\n        throw error;\n      }\n    },\n    [sdk, registerPushTokenForCurrentUser, features.autoPushTokenRegistrationEnabled],\n  );\n\n  const disconnect = useCallback(async () => {\n    Logger.debug('[useConnection]', 'disconnect start');\n\n    if (features.autoPushTokenRegistrationEnabled) {\n      Logger.debug('[useConnection]', 'autoPushTokenRegistration enabled, unregister for current user');\n      await unregisterPushTokenForCurrentUser().catch((e) => {\n        Logger.warn('[useConnection]', 'autoPushToken unregister failure', e);\n      });\n    }\n\n    await sdk.disconnect().then(() => setCurrentUser(undefined));\n    Logger.debug('[useConnection]', 'disconnected!');\n  }, [sdk, unregisterPushTokenForCurrentUser, features.autoPushTokenRegistrationEnabled]);\n\n  return { connect, disconnect, reconnect: () => sdk.reconnect() };\n};\n\nexport default useConnection;\n"],"mappings":"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"}