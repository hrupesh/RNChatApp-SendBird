{"version":3,"names":["NUM_COL","REACTION_MORE_KEY","getUserReacted","reaction","userId","UNKNOWN_USER_ID","userIds","indexOf","createOnPressReaction","channel","message","reacted","deleteReaction","key","addReaction","createReactionButtons","getEmoji","emojiLimit","onOpenReactionList","onOpenReactionUserList","currentUserId","reactions","buttons","map","index","isNotLastOfRow","isNotLastOfCol","length","DEFAULT_LONG_PRESS_DELAY","pressed","url","getReactionCount","styles","marginRight","marginBottom","push","MessageReactionAddon","colors","useUIKitTheme","emojiManager","currentUser","useSendbirdChat","openReactionList","openReactionUserList","useReaction","reactionButtons","allEmojiMap","allEmoji","focusIndex","reactionContainer","backgroundColor","background","borderColor","ui","rounded","enabled","createStyleSheet","alignItems","flexDirection","flexWrap","padding","borderRadius","borderWidth"],"sources":["MessageReactionAddon.tsx"],"sourcesContent":["import React from 'react';\nimport { Pressable } from 'react-native';\n\nimport type { Emoji } from '@sendbird/chat';\nimport { createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdBaseChannel, SendbirdBaseMessage, SendbirdReaction } from '@sendbird/uikit-utils';\nimport { getReactionCount } from '@sendbird/uikit-utils';\n\nimport { DEFAULT_LONG_PRESS_DELAY, UNKNOWN_USER_ID } from '../../constants';\nimport { useReaction, useSendbirdChat } from '../../hooks/useContext';\nimport ReactionRoundedButton from './ReactionRoundedButton';\n\nconst NUM_COL = 4;\nconst REACTION_MORE_KEY = 'reaction-more-button';\n\nconst getUserReacted = (reaction: SendbirdReaction, userId = UNKNOWN_USER_ID) => {\n  return reaction.userIds.indexOf(userId) > -1;\n};\n\nconst createOnPressReaction = (\n  reaction: SendbirdReaction,\n  channel: SendbirdBaseChannel,\n  message: SendbirdBaseMessage,\n  reacted: boolean,\n) => {\n  return () => {\n    if (reacted) {\n      return channel.deleteReaction(message, reaction.key);\n    } else {\n      return channel.addReaction(message, reaction.key);\n    }\n  };\n};\n\nconst createReactionButtons = (\n  channel: SendbirdBaseChannel,\n  message: SendbirdBaseMessage,\n  getEmoji: (key: string) => Emoji,\n  emojiLimit: number,\n  onOpenReactionList: () => void,\n  onOpenReactionUserList: (focusIndex: number) => void,\n  currentUserId?: string,\n) => {\n  const reactions = message.reactions ?? [];\n  const buttons = reactions.map((reaction, index) => {\n    const isNotLastOfRow = index % NUM_COL !== NUM_COL - 1;\n    const isNotLastOfCol = index < NUM_COL && reactions.length >= NUM_COL;\n    return (\n      <Pressable\n        key={reaction.key}\n        onPress={createOnPressReaction(reaction, channel, message, getUserReacted(reaction, currentUserId))}\n        onLongPress={() => onOpenReactionUserList(index)}\n        delayLongPress={DEFAULT_LONG_PRESS_DELAY}\n      >\n        {({ pressed }) => (\n          <ReactionRoundedButton\n            url={getEmoji(reaction.key).url}\n            count={getReactionCount(reaction)}\n            reacted={pressed || getUserReacted(reaction, currentUserId)}\n            style={[isNotLastOfRow && styles.marginRight, isNotLastOfCol && styles.marginBottom]}\n          />\n        )}\n      </Pressable>\n    );\n  });\n  if (buttons.length < emojiLimit) {\n    buttons.push(\n      <Pressable key={REACTION_MORE_KEY} onPress={onOpenReactionList}>\n        {({ pressed }) => <ReactionRoundedButton.More pressed={pressed} />}\n      </Pressable>,\n    );\n  }\n\n  return buttons;\n};\n\nconst MessageReactionAddon = ({ channel, message }: { channel: SendbirdBaseChannel; message: SendbirdBaseMessage }) => {\n  const { colors } = useUIKitTheme();\n  const { emojiManager, currentUser } = useSendbirdChat();\n  const { openReactionList, openReactionUserList } = useReaction();\n\n  if (!message.reactions?.length) return null;\n\n  const reactionButtons = createReactionButtons(\n    channel,\n    message,\n    (key) => emojiManager.allEmojiMap[key],\n    emojiManager.allEmoji.length,\n    () => openReactionList({ channel, message }),\n    (focusIndex) => openReactionUserList({ channel, message, focusIndex }),\n    currentUser?.userId,\n  );\n\n  return (\n    <Pressable\n      style={[\n        styles.reactionContainer,\n        { backgroundColor: colors.background, borderColor: colors.ui.reaction.rounded.enabled.background },\n      ]}\n    >\n      {reactionButtons}\n    </Pressable>\n  );\n};\n\nconst styles = createStyleSheet({\n  reactionContainer: {\n    alignItems: 'stretch',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    padding: 8,\n    borderRadius: 16,\n    borderWidth: 1,\n  },\n  marginRight: {\n    marginRight: 4.5,\n  },\n  marginBottom: {\n    marginBottom: 4,\n  },\n});\n\nexport default MessageReactionAddon;\n"],"mappings":"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"}