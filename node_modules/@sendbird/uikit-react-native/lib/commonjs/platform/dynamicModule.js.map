{"version":3,"names":["checkLink","dmi","logLevel","nativeModule","isComponent","UIManager","getViewManagerConfig","nativeModuleNamespace","NativeModules","message","packageName","url","console","error","warn","SBUDynamicModuleRegistry","getPackage","require","e","SBUDynamicModule","register","mdi","getInfo","name","get","Logger"],"sources":["dynamicModule.ts"],"sourcesContent":["/* eslint-disable no-console */\nimport type * as RNCNetInfo from '@react-native-community/netinfo';\nimport { NativeModules, UIManager } from 'react-native';\n\nimport { Logger } from '@sendbird/uikit-utils';\n\nexport type SBUNativeModule = keyof DynamicModules;\n\ninterface SBUDynamicModuleInfo {\n  packageName: SBUNativeModule;\n  nativeModuleNamespace: string;\n  getPackage: <T>(logLevel: 'error' | 'warn' | 'none') => T;\n  url: string;\n  isComponent?: boolean;\n}\n\nfunction checkLink(dmi: SBUDynamicModuleInfo, logLevel: 'error' | 'warn' | 'none') {\n  const nativeModule = (() => {\n    if (dmi.isComponent) {\n      return UIManager.getViewManagerConfig(dmi.nativeModuleNamespace);\n    } else {\n      return NativeModules[dmi.nativeModuleNamespace];\n    }\n  })();\n\n  if (!nativeModule) {\n    const message = `[UIKit] Cannot use native module, you should install and link ${dmi.packageName} (${dmi.url})`;\n    if (logLevel === 'error') console.error(message);\n    if (logLevel === 'warn') console.warn(message);\n  }\n}\n\nexport interface DynamicModules {\n  '@react-native-community/netinfo': typeof RNCNetInfo;\n}\n\nconst SBUDynamicModuleRegistry: Record<SBUNativeModule, SBUDynamicModuleInfo> = {\n  '@react-native-community/netinfo': {\n    packageName: '@react-native-community/netinfo',\n    nativeModuleNamespace: 'RNCNetInfo',\n    url: 'https://github.com/react-native-netinfo/react-native-netinfo',\n    getPackage(logLevel) {\n      checkLink(this, logLevel);\n\n      try {\n        return require('@react-native-community/netinfo');\n      } catch (e) {\n        return null;\n      }\n    },\n  },\n};\n\nconst SBUDynamicModule = {\n  register(mdi: SBUDynamicModuleInfo) {\n    SBUDynamicModuleRegistry[mdi.nativeModuleNamespace as SBUNativeModule] = mdi;\n  },\n  getInfo(name: SBUNativeModule) {\n    return SBUDynamicModuleRegistry[name] ?? null;\n  },\n  get<K extends SBUNativeModule, T extends DynamicModules[K]>(name: K, logLevel: 'error' | 'warn' | 'none' = 'error') {\n    const dmi = this.getInfo(name);\n    if (!dmi) Logger.warn(`${name} doesn't exist in the dynamic module`);\n    return dmi?.getPackage<T>(logLevel);\n  },\n};\n\nexport default SBUDynamicModule;\n"],"mappings":";;;;;;;AAEA;;AAEA;;AAJA;AAgBA,SAASA,SAAT,CAAmBC,GAAnB,EAA8CC,QAA9C,EAAmF;EACjF,MAAMC,YAAY,GAAG,CAAC,MAAM;IAC1B,IAAIF,GAAG,CAACG,WAAR,EAAqB;MACnB,OAAOC,sBAAA,CAAUC,oBAAV,CAA+BL,GAAG,CAACM,qBAAnC,CAAP;IACD,CAFD,MAEO;MACL,OAAOC,0BAAA,CAAcP,GAAG,CAACM,qBAAlB,CAAP;IACD;EACF,CANoB,GAArB;;EAQA,IAAI,CAACJ,YAAL,EAAmB;IACjB,MAAMM,OAAO,GAAI,iEAAgER,GAAG,CAACS,WAAY,KAAIT,GAAG,CAACU,GAAI,GAA7G;IACA,IAAIT,QAAQ,KAAK,OAAjB,EAA0BU,OAAO,CAACC,KAAR,CAAcJ,OAAd;IAC1B,IAAIP,QAAQ,KAAK,MAAjB,EAAyBU,OAAO,CAACE,IAAR,CAAaL,OAAb;EAC1B;AACF;;AAMD,MAAMM,wBAAuE,GAAG;EAC9E,mCAAmC;IACjCL,WAAW,EAAE,iCADoB;IAEjCH,qBAAqB,EAAE,YAFU;IAGjCI,GAAG,EAAE,8DAH4B;;IAIjCK,UAAU,CAACd,QAAD,EAAW;MACnBF,SAAS,CAAC,IAAD,EAAOE,QAAP,CAAT;;MAEA,IAAI;QACF,OAAOe,OAAO,CAAC,iCAAD,CAAd;MACD,CAFD,CAEE,OAAOC,CAAP,EAAU;QACV,OAAO,IAAP;MACD;IACF;;EAZgC;AAD2C,CAAhF;AAiBA,MAAMC,gBAAgB,GAAG;EACvBC,QAAQ,CAACC,GAAD,EAA4B;IAClCN,wBAAwB,CAACM,GAAG,CAACd,qBAAL,CAAxB,GAAyEc,GAAzE;EACD,CAHsB;;EAIvBC,OAAO,CAACC,IAAD,EAAwB;IAC7B,OAAOR,wBAAwB,CAACQ,IAAD,CAAxB,IAAkC,IAAzC;EACD,CANsB;;EAOvBC,GAAG,CAAyDD,IAAzD,EAAiH;IAAA,IAA/CrB,QAA+C,uEAAT,OAAS;IAClH,MAAMD,GAAG,GAAG,KAAKqB,OAAL,CAAaC,IAAb,CAAZ;IACA,IAAI,CAACtB,GAAL,EAAUwB,kBAAA,CAAOX,IAAP,CAAa,GAAES,IAAK,sCAApB;IACV,OAAOtB,GAAP,aAAOA,GAAP,uBAAOA,GAAG,CAAEe,UAAL,CAAmBd,QAAnB,CAAP;EACD;;AAXsB,CAAzB;eAceiB,gB"}