{"version":3,"names":["GroupChannelListList","renderGroupChannelPreview","groupChannels","onLoadNext","flatListProps","menuItemCreator","PASS","toast","useToast","openMenu","useActionMenu","STRINGS","useLocalization","sdk","currentUser","useSendbirdChat","onLongPress","useFreshCallback","channel","action","myPushTriggerOption","menuItem","title","GROUP_CHANNEL_LIST","DIALOG_CHANNEL_TITLE","userId","menuItems","DIALOG_CHANNEL_NOTIFICATION","onPress","setMyPushTriggerOption","PushTriggerOption","DEFAULT","OFF","onError","show","TOAST","TURN_ON_NOTIFICATIONS_ERROR","TURN_OFF_NOTIFICATIONS_ERROR","DIALOG_CHANNEL_LEAVE","leave","then","clearCachedMessages","url","catch","LEAVE_CHANNEL_ERROR","renderItem","useCallback","item","left","right","useSafeAreaInsets","contentContainerStyle","paddingLeft","paddingRight","getChannelUniqId"],"sources":["GroupChannelListList.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { FlatList, ListRenderItem } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PushTriggerOption } from '@sendbird/chat';\nimport { useActionMenu, useToast } from '@sendbird/uikit-react-native-foundation';\nimport { PASS, SendbirdGroupChannel, getChannelUniqId, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport { useLocalization, useSendbirdChat } from '../../../hooks/useContext';\nimport type { GroupChannelListProps } from '../types';\n\nconst GroupChannelListList = ({\n  renderGroupChannelPreview,\n  groupChannels,\n  onLoadNext,\n  flatListProps,\n  menuItemCreator = PASS,\n}: GroupChannelListProps['List']) => {\n  const toast = useToast();\n  const { openMenu } = useActionMenu();\n  const { STRINGS } = useLocalization();\n  const { sdk, currentUser } = useSendbirdChat();\n\n  const onLongPress = useFreshCallback((channel: SendbirdGroupChannel) => {\n    const action = channel.myPushTriggerOption === 'off' ? 'on' : 'off';\n    const menuItem = menuItemCreator({\n      title: STRINGS.GROUP_CHANNEL_LIST.DIALOG_CHANNEL_TITLE(currentUser?.userId ?? '', channel),\n      menuItems: [\n        {\n          title: STRINGS.GROUP_CHANNEL_LIST.DIALOG_CHANNEL_NOTIFICATION(channel),\n          onPress: async () => {\n            if (action === 'on') {\n              await channel.setMyPushTriggerOption(PushTriggerOption.DEFAULT);\n            } else {\n              await channel.setMyPushTriggerOption(PushTriggerOption.OFF);\n            }\n          },\n          onError: () => {\n            toast.show(\n              action === 'on' ? STRINGS.TOAST.TURN_ON_NOTIFICATIONS_ERROR : STRINGS.TOAST.TURN_OFF_NOTIFICATIONS_ERROR,\n              'error',\n            );\n          },\n        },\n        {\n          title: STRINGS.GROUP_CHANNEL_LIST.DIALOG_CHANNEL_LEAVE,\n          onPress: async () => {\n            channel.leave().then(() => sdk.clearCachedMessages([channel.url]).catch());\n          },\n          onError: () => toast.show(STRINGS.TOAST.LEAVE_CHANNEL_ERROR, 'error'),\n        },\n      ],\n    });\n\n    openMenu(menuItem);\n  });\n\n  const renderItem: ListRenderItem<SendbirdGroupChannel> = useCallback(\n    ({ item }) => renderGroupChannelPreview?.(item, () => onLongPress(item)),\n    [renderGroupChannelPreview, onLongPress],\n  );\n\n  const { left, right } = useSafeAreaInsets();\n  return (\n    <FlatList\n      bounces={false}\n      data={groupChannels}\n      renderItem={renderItem}\n      onEndReached={onLoadNext}\n      {...flatListProps}\n      contentContainerStyle={[flatListProps?.contentContainerStyle, { paddingLeft: left, paddingRight: right }]}\n      keyExtractor={getChannelUniqId}\n    />\n  );\n};\n\nexport default GroupChannelListList;\n"],"mappings":"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"}