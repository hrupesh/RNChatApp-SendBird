{"version":3,"names":["GroupChannelNotificationsView","channel","useContext","GroupChannelNotificationsContexts","Fragment","STRINGS","useLocalization","colors","useUIKitTheme","forceUpdate","useForceUpdate","turnedOnNotifications","myPushTriggerOption","PushTriggerOption","OFF","turnedOnNotificationsOptionAll","ALL","DEFAULT","some","it","turnedOnNotificationsOptionMentionsOnly","MENTION_ONLY","toggleNotificationSwitch","val","setMyPushTriggerOption","onPressNotificationsOption","option","styles","container","GROUP_CHANNEL_NOTIFICATIONS","MENU_NOTIFICATIONS","MENU_NOTIFICATIONS_DESC","MENU_NOTIFICATIONS_OPTION_ALL","primary","onBackground03","MENU_NOTIFICATIONS_OPTION_MENTION_ONLY","Bar","title","onPress","description","component","subtitle2","body3","barContainer","titleContainer","onBackground01","Boolean","onBackground02","desc","createStyleSheet","paddingHorizontal","paddingVertical","flexDirection","alignItems","flex","marginRight","marginTop"],"sources":["GroupChannelNotificationsView.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { Pressable, ScrollView, View } from 'react-native';\n\nimport { PushTriggerOption } from '@sendbird/chat';\nimport { Divider, Icon, Switch, Text, createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport { useForceUpdate } from '@sendbird/uikit-utils';\n\nimport { useLocalization } from '../../../hooks/useContext';\nimport { GroupChannelNotificationsContexts } from '../module/moduleContext';\n\nconst GroupChannelNotificationsView = () => {\n  const { channel } = useContext(GroupChannelNotificationsContexts.Fragment);\n  const { STRINGS } = useLocalization();\n  const { colors } = useUIKitTheme();\n  const forceUpdate = useForceUpdate();\n\n  const turnedOnNotifications = channel.myPushTriggerOption !== PushTriggerOption.OFF;\n  const turnedOnNotificationsOptionAll = [PushTriggerOption.ALL, PushTriggerOption.DEFAULT].some(\n    (it) => it === channel.myPushTriggerOption,\n  );\n  const turnedOnNotificationsOptionMentionsOnly = channel.myPushTriggerOption === PushTriggerOption.MENTION_ONLY;\n\n  const toggleNotificationSwitch = async (val: boolean) => {\n    if (val) {\n      await channel.setMyPushTriggerOption(PushTriggerOption.ALL);\n    } else {\n      await channel.setMyPushTriggerOption(PushTriggerOption.OFF);\n    }\n    forceUpdate();\n  };\n\n  const onPressNotificationsOption = async (option: PushTriggerOption.ALL | PushTriggerOption.MENTION_ONLY) => {\n    await channel.setMyPushTriggerOption(option);\n    forceUpdate();\n  };\n\n  return (\n    <ScrollView bounces={false} contentContainerStyle={styles.container}>\n      <Bar\n        subtitle2\n        title={STRINGS.GROUP_CHANNEL_NOTIFICATIONS.MENU_NOTIFICATIONS}\n        description={STRINGS.GROUP_CHANNEL_NOTIFICATIONS.MENU_NOTIFICATIONS_DESC}\n        component={<Switch value={turnedOnNotifications} onChangeValue={toggleNotificationSwitch} />}\n      />\n      <Divider />\n      {turnedOnNotifications && (\n        <>\n          <Bar\n            body3\n            onPress={() => onPressNotificationsOption(PushTriggerOption.ALL)}\n            title={STRINGS.GROUP_CHANNEL_NOTIFICATIONS.MENU_NOTIFICATIONS_OPTION_ALL}\n            component={\n              <Icon\n                color={turnedOnNotificationsOptionAll ? colors.primary : colors.onBackground03}\n                icon={turnedOnNotificationsOptionAll ? 'radio-on' : 'radio-off'}\n                size={24}\n              />\n            }\n          />\n          <Divider />\n          <Bar\n            body3\n            onPress={() => onPressNotificationsOption(PushTriggerOption.MENTION_ONLY)}\n            title={STRINGS.GROUP_CHANNEL_NOTIFICATIONS.MENU_NOTIFICATIONS_OPTION_MENTION_ONLY}\n            component={\n              <Icon\n                color={turnedOnNotificationsOptionMentionsOnly ? colors.primary : colors.onBackground03}\n                icon={turnedOnNotificationsOptionMentionsOnly ? 'radio-on' : 'radio-off'}\n                size={24}\n              />\n            }\n          />\n          <Divider />\n        </>\n      )}\n    </ScrollView>\n  );\n};\n\ntype BarProps = {\n  title: string;\n  onPress?: () => void;\n  description?: string;\n  component: React.ReactNode;\n  subtitle2?: boolean;\n  body3?: boolean;\n};\nconst Bar = ({ title, onPress, description, component, subtitle2, body3 }: BarProps) => {\n  const { colors } = useUIKitTheme();\n  return (\n    <Pressable onPress={onPress} style={styles.barContainer}>\n      <View style={styles.titleContainer}>\n        <Text body3={body3} subtitle2={subtitle2} numberOfLines={1} color={colors.onBackground01} style={styles.title}>\n          {title}\n        </Text>\n        <View>{component}</View>\n      </View>\n      {Boolean(description) && (\n        <Text body3 color={colors.onBackground02} style={styles.desc}>\n          {description}\n        </Text>\n      )}\n    </Pressable>\n  );\n};\n\nconst styles = createStyleSheet({\n  container: {\n    paddingHorizontal: 16,\n  },\n  barContainer: {\n    paddingVertical: 16,\n  },\n  titleContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  title: {\n    flex: 1,\n    marginRight: 8,\n  },\n  desc: {\n    marginTop: 8,\n    flex: 1,\n  },\n});\n\nexport default GroupChannelNotificationsView;\n"],"mappings":"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"}