{"version":3,"names":["GroupChannelNotificationsContexts","Fragment","createContext","headerTitle","channel","GroupChannelNotificationsContextsProvider","children","STRINGS","useLocalization","GROUP_CHANNEL_NOTIFICATIONS","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdGroupChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { GroupChannelNotificationsContextsType, GroupChannelNotificationsModule } from '../types';\n\nexport const GroupChannelNotificationsContexts: GroupChannelNotificationsContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdGroupChannel,\n  }),\n};\n\nexport const GroupChannelNotificationsContextsProvider: GroupChannelNotificationsModule['Provider'] = ({\n  children,\n  channel,\n}) => {\n  const { STRINGS } = useLocalization();\n\n  return (\n    <ProviderLayout>\n      <GroupChannelNotificationsContexts.Fragment.Provider\n        value={{ channel, headerTitle: STRINGS.GROUP_CHANNEL_NOTIFICATIONS.HEADER_TITLE }}\n      >\n        {children}\n      </GroupChannelNotificationsContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":";;;;;;;AAAA;;AAIA;;AACA;;;;;;;;AAGO,MAAMA,iCAAwE,GAAG;EACtFC,QAAQ,eAAE,IAAAC,oBAAA,EAAc;IACtBC,WAAW,EAAE,EADS;IAEtBC,OAAO,EAAE;EAFa,CAAd;AAD4E,CAAjF;;;AAOA,MAAMC,yCAAsF,GAAG,QAGhG;EAAA,IAHiG;IACrGC,QADqG;IAErGF;EAFqG,CAGjG;EACJ,MAAM;IAAEG;EAAF,IAAc,IAAAC,2BAAA,GAApB;EAEA,oBACE,6BAAC,uBAAD,qBACE,6BAAC,iCAAD,CAAmC,QAAnC,CAA4C,QAA5C;IACE,KAAK,EAAE;MAAEJ,OAAF;MAAWD,WAAW,EAAEI,OAAO,CAACE,2BAAR,CAAoCC;IAA5D;EADT,GAGGJ,QAHH,CADF,CADF;AASD,CAfM"}