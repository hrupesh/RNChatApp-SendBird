{"version":3,"names":["AUTO_FOCUS","Platform","select","ios","android","default","KEYBOARD_AVOID_VIEW_BEHAVIOR","undefined","GET_INPUT_KEY","shouldReset","GroupChannelInput","props","top","left","right","bottom","useSafeAreaInsets","colors","useUIKitTheme","features","mentionManager","useSendbirdChat","channel","messageToEdit","setMessageToEdit","keyboardAvoidOffset","useContext","GroupChannelContexts","Fragment","chatAvailableState","getGroupChannelChatAvailableState","mentionAvailable","userMentionEnabled","isGroupChannel","isBroadcast","inputMode","useIIFE","isFileMessage","inputHeight","setInputHeight","useState","styles","inputDefault","height","selection","onSelectionChange","textInputRef","text","onChangeText","mentionedUsers","useMentionTextInput","useTypingTrigger","useTextPersistenceOnDisabled","disabled","useAutoFocusOnEditMode","onPressToMention","user","searchStringRange","mentionedMessageText","asMentionedMessageText","range","start","end","length","replace","shouldRenderInput","paddingLeft","paddingRight","backgroundColor","background","e","nativeEvent","layout","inputContainer","useEffect","endTyping","startTyping","setText","chatDisabled","textTmpRef","useRef","current","isUserMessage","setTimeout","focus","SafeAreaBottom","createStyleSheet","justifyContent","width","React","memo"],"sources":["index.tsx"],"sourcesContent":["import React, { MutableRefObject, useContext, useEffect, useRef, useState } from 'react';\nimport { KeyboardAvoidingView, Platform, TextInput, View } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { createStyleSheet, useUIKitTheme } from '@sendbird/uikit-react-native-foundation';\nimport {\n  SendbirdFileMessage,\n  SendbirdGroupChannel,\n  SendbirdUserMessage,\n  getGroupChannelChatAvailableState,\n  replace,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from '../../../../hooks/useContext';\nimport useMentionTextInput from '../../../../hooks/useMentionTextInput';\nimport { GroupChannelContexts } from '../../module/moduleContext';\nimport type { GroupChannelProps } from '../../types';\nimport EditInput from './EditInput';\nimport SendInput from './SendInput';\n\nconst AUTO_FOCUS = Platform.select({ ios: false, android: true, default: false });\nconst KEYBOARD_AVOID_VIEW_BEHAVIOR = Platform.select({ ios: 'padding' as const, default: undefined });\n\n// FIXME(iOS): Dynamic style does not work properly when typing the CJK. (https://github.com/facebook/react-native/issues/26107)\n//  To workaround temporarily, change the key for re-mount the component.\n//  -> This will affect to keyboard blur when add/remove first mentioned user.\nconst GET_INPUT_KEY = (shouldReset: boolean) => (shouldReset ? 'uikit-input-clear' : 'uikit-input');\n\n// TODO: Refactor 'Edit' mode to clearly\nconst GroupChannelInput = (props: GroupChannelProps['Input']) => {\n  const { top, left, right, bottom } = useSafeAreaInsets();\n  const { colors } = useUIKitTheme();\n  const { features, mentionManager } = useSendbirdChat();\n  const {\n    channel,\n    messageToEdit,\n    setMessageToEdit,\n    keyboardAvoidOffset = 0,\n  } = useContext(GroupChannelContexts.Fragment);\n\n  const chatAvailableState = getGroupChannelChatAvailableState(channel);\n  const mentionAvailable = features.userMentionEnabled && channel.isGroupChannel() && !channel.isBroadcast;\n  const inputMode = useIIFE(() => {\n    if (!messageToEdit) return 'send';\n    if (messageToEdit.isFileMessage()) return 'send';\n    return 'edit';\n  });\n\n  const [inputHeight, setInputHeight] = useState(styles.inputDefault.height);\n\n  const { selection, onSelectionChange, textInputRef, text, onChangeText, mentionedUsers } = useMentionTextInput({\n    messageToEdit: messageToEdit,\n  });\n\n  useTypingTrigger(text, channel);\n  useTextPersistenceOnDisabled(text, onChangeText, chatAvailableState.disabled);\n  useAutoFocusOnEditMode(textInputRef, messageToEdit);\n\n  const onPressToMention: GroupChannelProps['SuggestedMentionList']['onPressToMention'] = (user, searchStringRange) => {\n    const mentionedMessageText = mentionManager.asMentionedMessageText(user, true);\n    const range = { start: searchStringRange.start, end: searchStringRange.start + mentionedMessageText.length - 1 };\n\n    onChangeText(replace(text, searchStringRange.start, searchStringRange.end, mentionedMessageText), { user, range });\n  };\n\n  if (!props.shouldRenderInput) {\n    return <SafeAreaBottom height={bottom} />;\n  }\n\n  return (\n    <>\n      <KeyboardAvoidingView\n        keyboardVerticalOffset={-bottom + keyboardAvoidOffset}\n        behavior={KEYBOARD_AVOID_VIEW_BEHAVIOR}\n      >\n        <View style={{ paddingLeft: left, paddingRight: right, backgroundColor: colors.background }}>\n          <View onLayout={(e) => setInputHeight(e.nativeEvent.layout.height)} style={styles.inputContainer}>\n            {inputMode === 'send' && (\n              <SendInput\n                {...props}\n                {...chatAvailableState}\n                key={GET_INPUT_KEY(mentionedUsers.length === 0)}\n                ref={textInputRef as never}\n                text={text}\n                onChangeText={onChangeText}\n                onSelectionChange={onSelectionChange}\n                mentionedUsers={mentionedUsers}\n              />\n            )}\n            {inputMode === 'edit' && messageToEdit && (\n              <EditInput\n                {...props}\n                key={GET_INPUT_KEY(mentionedUsers.length === 0)}\n                ref={textInputRef as never}\n                autoFocus={AUTO_FOCUS}\n                text={text}\n                onChangeText={onChangeText}\n                messageToEdit={messageToEdit}\n                setMessageToEdit={setMessageToEdit}\n                disabled={chatAvailableState.disabled}\n                onSelectionChange={onSelectionChange}\n                mentionedUsers={mentionedUsers}\n              />\n            )}\n          </View>\n          <SafeAreaBottom height={bottom} />\n        </View>\n      </KeyboardAvoidingView>\n      {mentionAvailable && (\n        <props.SuggestedMentionList\n          text={text}\n          selection={selection}\n          inputHeight={inputHeight}\n          topInset={top}\n          bottomInset={bottom}\n          onPressToMention={onPressToMention}\n          mentionedUsers={mentionedUsers}\n        />\n      )}\n    </>\n  );\n};\n\nconst useTypingTrigger = (text: string, channel: SendbirdGroupChannel) => {\n  useEffect(() => {\n    if (text.length === 0) channel.endTyping();\n    else channel.startTyping();\n  }, [text]);\n};\n\nconst useTextPersistenceOnDisabled = (text: string, setText: (val: string) => void, chatDisabled: boolean) => {\n  const textTmpRef = useRef('');\n\n  useEffect(() => {\n    if (chatDisabled) {\n      textTmpRef.current = text;\n      setText('');\n    } else {\n      setText(textTmpRef.current);\n    }\n  }, [chatDisabled]);\n};\n\nconst useAutoFocusOnEditMode = (\n  textInputRef: MutableRefObject<TextInput | undefined>,\n  messageToEdit?: SendbirdUserMessage | SendbirdFileMessage,\n) => {\n  useEffect(() => {\n    if (messageToEdit?.isUserMessage()) {\n      if (!AUTO_FOCUS) setTimeout(() => textInputRef.current?.focus(), 500);\n    }\n  }, [messageToEdit]);\n};\n\nconst SafeAreaBottom = ({ height }: { height: number }) => {\n  return <View style={{ height }} />;\n};\n\nconst styles = createStyleSheet({\n  inputContainer: {\n    justifyContent: 'center',\n    width: '100%',\n  },\n  inputDefault: {\n    height: 56,\n  },\n});\n\nexport default React.memo(GroupChannelInput);\n"],"mappings":"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"}