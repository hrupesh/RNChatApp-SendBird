{"version":3,"names":["GroupChannelHeader","onPressHeaderLeft","onPressHeaderRight","headerTitle","channel","useContext","GroupChannelContexts","Fragment","typingUsers","TypingIndicator","STRINGS","useLocalization","HeaderComponent","useHeaderStyle","subtitle","LABELS","TYPING_INDICATOR_TYPINGS","styles","titleContainer","avatarGroup","flexShrink","Boolean","createStyleSheet","maxWidth","flexDirection","alignItems","marginRight","marginTop"],"sources":["GroupChannelHeader.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { View } from 'react-native';\n\nimport { Header, Icon, createStyleSheet, useHeaderStyle } from '@sendbird/uikit-react-native-foundation';\n\nimport ChannelCover from '../../../components/ChannelCover';\nimport { useLocalization } from '../../../hooks/useContext';\nimport { GroupChannelContexts } from '../module/moduleContext';\nimport type { GroupChannelProps } from '../types';\n\nconst GroupChannelHeader = ({ onPressHeaderLeft, onPressHeaderRight }: GroupChannelProps['Header']) => {\n  const { headerTitle, channel } = useContext(GroupChannelContexts.Fragment);\n  const { typingUsers } = useContext(GroupChannelContexts.TypingIndicator);\n  const { STRINGS } = useLocalization();\n  const { HeaderComponent } = useHeaderStyle();\n  const subtitle = STRINGS.LABELS.TYPING_INDICATOR_TYPINGS(typingUsers);\n\n  return (\n    <HeaderComponent\n      clearTitleMargin\n      title={\n        <View style={styles.titleContainer}>\n          <ChannelCover channel={channel} size={34} containerStyle={styles.avatarGroup} />\n          <View style={{ flexShrink: 1 }}>\n            <Header.Title h2>{headerTitle}</Header.Title>\n            {Boolean(subtitle) && subtitle && <Header.Subtitle style={styles.subtitle}>{subtitle}</Header.Subtitle>}\n          </View>\n        </View>\n      }\n      left={<Icon icon={'arrow-left'} />}\n      onPressLeft={onPressHeaderLeft}\n      right={<Icon icon={'info'} />}\n      onPressRight={onPressHeaderRight}\n    />\n  );\n};\n\nconst styles = createStyleSheet({\n  titleContainer: {\n    maxWidth: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatarGroup: {\n    marginRight: 8,\n  },\n  subtitle: {\n    marginTop: 2,\n  },\n});\n\nexport default GroupChannelHeader;\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;AACA;;;;;;;;AAGA,MAAMA,kBAAkB,GAAG,QAA4E;EAAA,IAA3E;IAAEC,iBAAF;IAAqBC;EAArB,CAA2E;EACrG,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAA2B,IAAAC,iBAAA,EAAWC,mCAAA,CAAqBC,QAAhC,CAAjC;EACA,MAAM;IAAEC;EAAF,IAAkB,IAAAH,iBAAA,EAAWC,mCAAA,CAAqBG,eAAhC,CAAxB;EACA,MAAM;IAAEC;EAAF,IAAc,IAAAC,2BAAA,GAApB;EACA,MAAM;IAAEC;EAAF,IAAsB,IAAAC,0CAAA,GAA5B;EACA,MAAMC,QAAQ,GAAGJ,OAAO,CAACK,MAAR,CAAeC,wBAAf,CAAwCR,WAAxC,CAAjB;EAEA,oBACE,6BAAC,eAAD;IACE,gBAAgB,MADlB;IAEE,KAAK,eACH,6BAAC,iBAAD;MAAM,KAAK,EAAES,MAAM,CAACC;IAApB,gBACE,6BAAC,qBAAD;MAAc,OAAO,EAAEd,OAAvB;MAAgC,IAAI,EAAE,EAAtC;MAA0C,cAAc,EAAEa,MAAM,CAACE;IAAjE,EADF,eAEE,6BAAC,iBAAD;MAAM,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAd;IAAb,gBACE,6BAAC,kCAAD,CAAQ,KAAR;MAAc,EAAE;IAAhB,GAAkBjB,WAAlB,CADF,EAEGkB,OAAO,CAACP,QAAD,CAAP,IAAqBA,QAArB,iBAAiC,6BAAC,kCAAD,CAAQ,QAAR;MAAiB,KAAK,EAAEG,MAAM,CAACH;IAA/B,GAA0CA,QAA1C,CAFpC,CAFF,CAHJ;IAWE,IAAI,eAAE,6BAAC,gCAAD;MAAM,IAAI,EAAE;IAAZ,EAXR;IAYE,WAAW,EAAEb,iBAZf;IAaE,KAAK,eAAE,6BAAC,gCAAD;MAAM,IAAI,EAAE;IAAZ,EAbT;IAcE,YAAY,EAAEC;EAdhB,EADF;AAkBD,CAzBD;;AA2BA,MAAMe,MAAM,GAAG,IAAAK,4CAAA,EAAiB;EAC9BJ,cAAc,EAAE;IACdK,QAAQ,EAAE,MADI;IAEdC,aAAa,EAAE,KAFD;IAGdC,UAAU,EAAE;EAHE,CADc;EAM9BN,WAAW,EAAE;IACXO,WAAW,EAAE;EADF,CANiB;EAS9BZ,QAAQ,EAAE;IACRa,SAAS,EAAE;EADH;AAToB,CAAjB,CAAf;eAce3B,kB"}