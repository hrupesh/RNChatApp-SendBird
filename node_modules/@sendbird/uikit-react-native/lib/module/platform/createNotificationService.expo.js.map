{"version":3,"names":["createExpoNotificationService","messagingModule","authorizedStatus","IosAuthorizationStatus","AUTHORIZED","PROVISIONAL","getAPNSToken","response","getDevicePushTokenAsync","data","getFCMToken","hasPushPermission","status","getPermissionsAsync","Boolean","granted","ios","includes","requestPushPermission","requestPermissionsAsync","onTokenRefresh","handler","subscription","addPushTokenListener","removePushTokenSubscription"],"sources":["createNotificationService.expo.ts"],"sourcesContent":["import type * as ExpoNotification from 'expo-notifications';\n\nimport type { ExpoPushPermissionResponse } from '../utils/expoPermissionGranted';\nimport type { NotificationServiceInterface } from './types';\n\nconst createExpoNotificationService = (messagingModule: typeof ExpoNotification): NotificationServiceInterface => {\n  const authorizedStatus = [\n    messagingModule.IosAuthorizationStatus.AUTHORIZED,\n    messagingModule.IosAuthorizationStatus.PROVISIONAL,\n  ];\n\n  return {\n    async getAPNSToken(): Promise<string | null> {\n      const response = await messagingModule.getDevicePushTokenAsync();\n      return response.data;\n    },\n    async getFCMToken(): Promise<string | null> {\n      const response = await messagingModule.getDevicePushTokenAsync();\n      return response.data;\n    },\n    async hasPushPermission(): Promise<boolean> {\n      const status = (await messagingModule.getPermissionsAsync()) as ExpoPushPermissionResponse;\n      return Boolean(status.granted || (status.ios?.status && authorizedStatus.includes(status.ios.status)));\n    },\n    async requestPushPermission(): Promise<boolean> {\n      const status = (await messagingModule.requestPermissionsAsync()) as ExpoPushPermissionResponse;\n      return Boolean(status.granted || (status.ios?.status && authorizedStatus.includes(status.ios.status)));\n    },\n    onTokenRefresh(handler: (token: string) => void): () => void | undefined {\n      const subscription = messagingModule.addPushTokenListener(({ data }) => handler(data));\n      return () => messagingModule.removePushTokenSubscription(subscription);\n    },\n  };\n};\n\nexport default createExpoNotificationService;\n"],"mappings":"AAKA,MAAMA,6BAA6B,GAAIC,eAAD,IAA4E;EAChH,MAAMC,gBAAgB,GAAG,CACvBD,eAAe,CAACE,sBAAhB,CAAuCC,UADhB,EAEvBH,eAAe,CAACE,sBAAhB,CAAuCE,WAFhB,CAAzB;EAKA,OAAO;IACL,MAAMC,YAAN,GAA6C;MAC3C,MAAMC,QAAQ,GAAG,MAAMN,eAAe,CAACO,uBAAhB,EAAvB;MACA,OAAOD,QAAQ,CAACE,IAAhB;IACD,CAJI;;IAKL,MAAMC,WAAN,GAA4C;MAC1C,MAAMH,QAAQ,GAAG,MAAMN,eAAe,CAACO,uBAAhB,EAAvB;MACA,OAAOD,QAAQ,CAACE,IAAhB;IACD,CARI;;IASL,MAAME,iBAAN,GAA4C;MAAA;;MAC1C,MAAMC,MAAM,GAAI,MAAMX,eAAe,CAACY,mBAAhB,EAAtB;MACA,OAAOC,OAAO,CAACF,MAAM,CAACG,OAAP,IAAmB,gBAAAH,MAAM,CAACI,GAAP,4DAAYJ,MAAZ,KAAsBV,gBAAgB,CAACe,QAAjB,CAA0BL,MAAM,CAACI,GAAP,CAAWJ,MAArC,CAA1C,CAAd;IACD,CAZI;;IAaL,MAAMM,qBAAN,GAAgD;MAAA;;MAC9C,MAAMN,MAAM,GAAI,MAAMX,eAAe,CAACkB,uBAAhB,EAAtB;MACA,OAAOL,OAAO,CAACF,MAAM,CAACG,OAAP,IAAmB,iBAAAH,MAAM,CAACI,GAAP,8DAAYJ,MAAZ,KAAsBV,gBAAgB,CAACe,QAAjB,CAA0BL,MAAM,CAACI,GAAP,CAAWJ,MAArC,CAA1C,CAAd;IACD,CAhBI;;IAiBLQ,cAAc,CAACC,OAAD,EAA2D;MACvE,MAAMC,YAAY,GAAGrB,eAAe,CAACsB,oBAAhB,CAAqC;QAAA,IAAC;UAAEd;QAAF,CAAD;QAAA,OAAcY,OAAO,CAACZ,IAAD,CAArB;MAAA,CAArC,CAArB;MACA,OAAO,MAAMR,eAAe,CAACuB,2BAAhB,CAA4CF,YAA5C,CAAb;IACD;;EApBI,CAAP;AAsBD,CA5BD;;AA8BA,eAAetB,6BAAf"}