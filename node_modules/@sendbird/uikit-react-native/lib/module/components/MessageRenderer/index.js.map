{"version":3,"names":["React","Pressable","View","createStyleSheet","calcMessageGrouping","conditionChaining","isMyMessage","shouldRenderReaction","useIIFE","DEFAULT_LONG_PRESS_DELAY","useSendbirdChat","ReactionAddons","AdminMessage","FileMessage","MessageContainer","MessageDateSeparator","MessageIncomingAvatar","MessageIncomingSenderName","MessageOutgoingStatus","MessageTime","UnknownMessage","UserMessage","MessageRenderer","currentUserId","channel","message","onPress","onLongPress","rest","variant","isOutgoing","isIncoming","variantContainerStyle","incoming","styles","chatIncoming","outgoing","chatOutgoing","groupWithPrev","groupWithNext","Boolean","enableMessageGrouping","prevMessage","nextMessage","features","reactionChildren","reactionEnabled","reactions","length","messageComponent","pressableProps","style","msgContainer","disabled","delayLongPress","messageProps","isUserMessage","pressed","isFileMessage","isAdminMessage","chatGroup","chatNonGroup","chatLastMessage","outgoingContainer","timeOutgoing","bubbleContainer","bubbleWrapper","timeIncoming","flexDirection","justifyContent","alignItems","marginLeft","marginRight","marginBottom","maxWidth","flexShrink","memo"],"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport { Pressable, PressableProps, View } from 'react-native';\n\nimport { createStyleSheet } from '@sendbird/uikit-react-native-foundation';\nimport type { SendbirdMessage } from '@sendbird/uikit-utils';\nimport {\n  calcMessageGrouping,\n  conditionChaining,\n  isMyMessage,\n  shouldRenderReaction,\n  useIIFE,\n} from '@sendbird/uikit-utils';\n\nimport { DEFAULT_LONG_PRESS_DELAY } from '../../constants';\nimport type { GroupChannelProps } from '../../domain/groupChannel/types';\nimport { useSendbirdChat } from '../../hooks/useContext';\nimport { ReactionAddons } from '../ReactionAddons';\nimport AdminMessage from './AdminMessage';\nimport FileMessage from './FileMessage';\nimport MessageContainer from './MessageContainer';\nimport MessageDateSeparator from './MessageDateSeparator';\nimport MessageIncomingAvatar from './MessageIncomingAvatar';\nimport MessageIncomingSenderName from './MessageIncomingSenderName';\nimport MessageOutgoingStatus from './MessageOutgoingStatus';\nimport MessageTime from './MessageTime';\nimport UnknownMessage from './UnknownMessage';\nimport UserMessage from './UserMessage';\n\ntype MessageStyleVariant = 'outgoing' | 'incoming';\nexport type MessageRendererInterface<T = SendbirdMessage, AdditionalProps = unknown> = {\n  message: T;\n  prevMessage?: SendbirdMessage;\n  nextMessage?: SendbirdMessage;\n  variant: MessageStyleVariant;\n  groupWithPrev: boolean;\n  groupWithNext: boolean;\n  pressed: boolean;\n  children?: React.ReactElement | null;\n} & AdditionalProps;\n\nconst MessageRenderer: GroupChannelProps['Fragment']['renderMessage'] = ({\n  currentUserId,\n  channel,\n  message,\n  onPress,\n  onLongPress,\n  ...rest\n}) => {\n  const variant: MessageStyleVariant = isMyMessage(message, currentUserId) ? 'outgoing' : 'incoming';\n  const isOutgoing = variant === 'outgoing';\n  const isIncoming = variant === 'incoming';\n  const variantContainerStyle = { incoming: styles.chatIncoming, outgoing: styles.chatOutgoing }[variant];\n\n  const { groupWithPrev, groupWithNext } = calcMessageGrouping(\n    Boolean(rest.enableMessageGrouping),\n    message,\n    rest.prevMessage,\n    rest.nextMessage,\n  );\n\n  const { features } = useSendbirdChat();\n\n  const reactionChildren = useIIFE(() => {\n    if (shouldRenderReaction(channel, features.reactionEnabled) && message.reactions && message.reactions.length > 0) {\n      return <ReactionAddons.Message channel={channel} message={message} />;\n    }\n    return null;\n  });\n\n  const messageComponent = useIIFE(() => {\n    const pressableProps: PressableProps = {\n      style: styles.msgContainer,\n      disabled: !onPress && !onLongPress,\n      onPress,\n      onLongPress,\n      delayLongPress: DEFAULT_LONG_PRESS_DELAY,\n    };\n    const messageProps = { ...rest, variant, groupWithNext, groupWithPrev };\n\n    if (message.isUserMessage()) {\n      return (\n        <Pressable {...pressableProps}>\n          {({ pressed }) => (\n            <UserMessage\n              message={message}\n              pressed={pressed}\n              onLongPressURL={onLongPress}\n              onLongPressMentionedUser={onLongPress}\n              {...messageProps}\n            >\n              {reactionChildren}\n            </UserMessage>\n          )}\n        </Pressable>\n      );\n    }\n\n    if (message.isFileMessage()) {\n      return (\n        <Pressable {...pressableProps}>\n          {({ pressed }) => (\n            <FileMessage message={message} pressed={pressed} {...messageProps}>\n              {reactionChildren}\n            </FileMessage>\n          )}\n        </Pressable>\n      );\n    }\n\n    if (message.isAdminMessage()) {\n      return <AdminMessage message={message} pressed={false} {...messageProps} />;\n    }\n\n    return (\n      <Pressable {...pressableProps}>\n        {({ pressed }) => <UnknownMessage message={message} pressed={pressed} {...messageProps} />}\n      </Pressable>\n    );\n  });\n\n  return (\n    <MessageContainer>\n      <MessageDateSeparator message={message} prevMessage={rest.prevMessage} />\n      {message.isAdminMessage() && messageComponent}\n      {!message.isAdminMessage() && (\n        <View\n          style={[\n            variantContainerStyle,\n            conditionChaining(\n              [groupWithNext, Boolean(rest.nextMessage)],\n              [styles.chatGroup, styles.chatNonGroup, styles.chatLastMessage],\n            ),\n          ]}\n        >\n          {isOutgoing && (\n            <View style={styles.outgoingContainer}>\n              <MessageOutgoingStatus channel={channel} message={message} />\n              <MessageTime message={message} grouping={groupWithNext} style={styles.timeOutgoing} />\n            </View>\n          )}\n          {isIncoming && <MessageIncomingAvatar message={message} grouping={groupWithNext} />}\n          <View style={styles.bubbleContainer}>\n            {isIncoming && <MessageIncomingSenderName message={message} grouping={groupWithPrev} />}\n            <View style={styles.bubbleWrapper}>\n              {messageComponent}\n              {isIncoming && <MessageTime message={message} grouping={groupWithNext} style={styles.timeIncoming} />}\n            </View>\n          </View>\n        </View>\n      )}\n    </MessageContainer>\n  );\n};\n\nconst styles = createStyleSheet({\n  chatIncoming: {\n    flexDirection: 'row',\n    justifyContent: 'flex-start',\n    alignItems: 'flex-end',\n  },\n  chatOutgoing: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'flex-end',\n  },\n  timeIncoming: {\n    marginLeft: 4,\n  },\n  timeOutgoing: {\n    marginRight: 4,\n  },\n  chatGroup: {\n    marginBottom: 2,\n  },\n  chatNonGroup: {\n    marginBottom: 16,\n  },\n  chatLastMessage: {\n    marginBottom: 16,\n  },\n  msgContainer: {\n    maxWidth: 240,\n  },\n  bubbleContainer: {\n    flexShrink: 1,\n  },\n  bubbleWrapper: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n  },\n  outgoingContainer: {\n    flexDirection: 'row',\n    alignItems: 'flex-end',\n    justifyContent: 'center',\n  },\n});\n\nexport default React.memo(MessageRenderer);\n"],"mappings":"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"}