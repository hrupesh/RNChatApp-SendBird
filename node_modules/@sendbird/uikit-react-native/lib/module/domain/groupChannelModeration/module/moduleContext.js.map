{"version":3,"names":["React","createContext","ProviderLayout","useLocalization","GroupChannelModerationContexts","Fragment","headerTitle","channel","GroupChannelModerationContextsProvider","children","STRINGS","GROUP_CHANNEL_MODERATION","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdGroupChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { GroupChannelModerationContextsType, GroupChannelModerationModule } from '../types';\n\nexport const GroupChannelModerationContexts: GroupChannelModerationContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdGroupChannel,\n  }),\n};\n\nexport const GroupChannelModerationContextsProvider: GroupChannelModerationModule['Provider'] = ({\n  children,\n  channel,\n}) => {\n  // const [visible, setVisible] = useState(false);\n\n  const { STRINGS } = useLocalization();\n\n  return (\n    <ProviderLayout>\n      <GroupChannelModerationContexts.Fragment.Provider\n        value={{ headerTitle: STRINGS.GROUP_CHANNEL_MODERATION.HEADER_TITLE, channel }}\n      >\n        {children}\n      </GroupChannelModerationContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAIA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAGA,OAAO,MAAMC,8BAAkE,GAAG;EAChFC,QAAQ,eAAEJ,aAAa,CAAC;IACtBK,WAAW,EAAE,EADS;IAEtBC,OAAO,EAAE;EAFa,CAAD;AADyD,CAA3E;AAOP,OAAO,MAAMC,sCAAgF,GAAG,QAG1F;EAAA,IAH2F;IAC/FC,QAD+F;IAE/FF;EAF+F,CAG3F;EACJ;EAEA,MAAM;IAAEG;EAAF,IAAcP,eAAe,EAAnC;EAEA,oBACE,oBAAC,cAAD,qBACE,oBAAC,8BAAD,CAAgC,QAAhC,CAAyC,QAAzC;IACE,KAAK,EAAE;MAAEG,WAAW,EAAEI,OAAO,CAACC,wBAAR,CAAiCC,YAAhD;MAA8DL;IAA9D;EADT,GAGGE,QAHH,CADF,CADF;AASD,CAjBM"}