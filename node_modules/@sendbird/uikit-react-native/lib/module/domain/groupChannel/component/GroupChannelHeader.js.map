{"version":3,"names":["React","useContext","View","Header","Icon","createStyleSheet","useHeaderStyle","ChannelCover","useLocalization","GroupChannelContexts","GroupChannelHeader","onPressHeaderLeft","onPressHeaderRight","headerTitle","channel","Fragment","typingUsers","TypingIndicator","STRINGS","HeaderComponent","subtitle","LABELS","TYPING_INDICATOR_TYPINGS","styles","titleContainer","avatarGroup","flexShrink","Boolean","maxWidth","flexDirection","alignItems","marginRight","marginTop"],"sources":["GroupChannelHeader.tsx"],"sourcesContent":["import React, { useContext } from 'react';\nimport { View } from 'react-native';\n\nimport { Header, Icon, createStyleSheet, useHeaderStyle } from '@sendbird/uikit-react-native-foundation';\n\nimport ChannelCover from '../../../components/ChannelCover';\nimport { useLocalization } from '../../../hooks/useContext';\nimport { GroupChannelContexts } from '../module/moduleContext';\nimport type { GroupChannelProps } from '../types';\n\nconst GroupChannelHeader = ({ onPressHeaderLeft, onPressHeaderRight }: GroupChannelProps['Header']) => {\n  const { headerTitle, channel } = useContext(GroupChannelContexts.Fragment);\n  const { typingUsers } = useContext(GroupChannelContexts.TypingIndicator);\n  const { STRINGS } = useLocalization();\n  const { HeaderComponent } = useHeaderStyle();\n  const subtitle = STRINGS.LABELS.TYPING_INDICATOR_TYPINGS(typingUsers);\n\n  return (\n    <HeaderComponent\n      clearTitleMargin\n      title={\n        <View style={styles.titleContainer}>\n          <ChannelCover channel={channel} size={34} containerStyle={styles.avatarGroup} />\n          <View style={{ flexShrink: 1 }}>\n            <Header.Title h2>{headerTitle}</Header.Title>\n            {Boolean(subtitle) && subtitle && <Header.Subtitle style={styles.subtitle}>{subtitle}</Header.Subtitle>}\n          </View>\n        </View>\n      }\n      left={<Icon icon={'arrow-left'} />}\n      onPressLeft={onPressHeaderLeft}\n      right={<Icon icon={'info'} />}\n      onPressRight={onPressHeaderRight}\n    />\n  );\n};\n\nconst styles = createStyleSheet({\n  titleContainer: {\n    maxWidth: '100%',\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  avatarGroup: {\n    marginRight: 8,\n  },\n  subtitle: {\n    marginTop: 2,\n  },\n});\n\nexport default GroupChannelHeader;\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,IAAT,QAAqB,cAArB;AAEA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,gBAAvB,EAAyCC,cAAzC,QAA+D,yCAA/D;AAEA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,SAASC,eAAT,QAAgC,2BAAhC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAGA,MAAMC,kBAAkB,GAAG,QAA4E;EAAA,IAA3E;IAAEC,iBAAF;IAAqBC;EAArB,CAA2E;EACrG,MAAM;IAAEC,WAAF;IAAeC;EAAf,IAA2Bb,UAAU,CAACQ,oBAAoB,CAACM,QAAtB,CAA3C;EACA,MAAM;IAAEC;EAAF,IAAkBf,UAAU,CAACQ,oBAAoB,CAACQ,eAAtB,CAAlC;EACA,MAAM;IAAEC;EAAF,IAAcV,eAAe,EAAnC;EACA,MAAM;IAAEW;EAAF,IAAsBb,cAAc,EAA1C;EACA,MAAMc,QAAQ,GAAGF,OAAO,CAACG,MAAR,CAAeC,wBAAf,CAAwCN,WAAxC,CAAjB;EAEA,oBACE,oBAAC,eAAD;IACE,gBAAgB,MADlB;IAEE,KAAK,eACH,oBAAC,IAAD;MAAM,KAAK,EAAEO,MAAM,CAACC;IAApB,gBACE,oBAAC,YAAD;MAAc,OAAO,EAAEV,OAAvB;MAAgC,IAAI,EAAE,EAAtC;MAA0C,cAAc,EAAES,MAAM,CAACE;IAAjE,EADF,eAEE,oBAAC,IAAD;MAAM,KAAK,EAAE;QAAEC,UAAU,EAAE;MAAd;IAAb,gBACE,oBAAC,MAAD,CAAQ,KAAR;MAAc,EAAE;IAAhB,GAAkBb,WAAlB,CADF,EAEGc,OAAO,CAACP,QAAD,CAAP,IAAqBA,QAArB,iBAAiC,oBAAC,MAAD,CAAQ,QAAR;MAAiB,KAAK,EAAEG,MAAM,CAACH;IAA/B,GAA0CA,QAA1C,CAFpC,CAFF,CAHJ;IAWE,IAAI,eAAE,oBAAC,IAAD;MAAM,IAAI,EAAE;IAAZ,EAXR;IAYE,WAAW,EAAET,iBAZf;IAaE,KAAK,eAAE,oBAAC,IAAD;MAAM,IAAI,EAAE;IAAZ,EAbT;IAcE,YAAY,EAAEC;EAdhB,EADF;AAkBD,CAzBD;;AA2BA,MAAMW,MAAM,GAAGlB,gBAAgB,CAAC;EAC9BmB,cAAc,EAAE;IACdI,QAAQ,EAAE,MADI;IAEdC,aAAa,EAAE,KAFD;IAGdC,UAAU,EAAE;EAHE,CADc;EAM9BL,WAAW,EAAE;IACXM,WAAW,EAAE;EADF,CANiB;EAS9BX,QAAQ,EAAE;IACRY,SAAS,EAAE;EADH;AAToB,CAAD,CAA/B;AAcA,eAAetB,kBAAf"}