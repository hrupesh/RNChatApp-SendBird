{"version":3,"names":["React","createContext","ProviderLayout","useLocalization","GroupChannelNotificationsContexts","Fragment","headerTitle","channel","GroupChannelNotificationsContextsProvider","children","STRINGS","GROUP_CHANNEL_NOTIFICATIONS","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdGroupChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { GroupChannelNotificationsContextsType, GroupChannelNotificationsModule } from '../types';\n\nexport const GroupChannelNotificationsContexts: GroupChannelNotificationsContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdGroupChannel,\n  }),\n};\n\nexport const GroupChannelNotificationsContextsProvider: GroupChannelNotificationsModule['Provider'] = ({\n  children,\n  channel,\n}) => {\n  const { STRINGS } = useLocalization();\n\n  return (\n    <ProviderLayout>\n      <GroupChannelNotificationsContexts.Fragment.Provider\n        value={{ channel, headerTitle: STRINGS.GROUP_CHANNEL_NOTIFICATIONS.HEADER_TITLE }}\n      >\n        {children}\n      </GroupChannelNotificationsContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAIA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAGA,OAAO,MAAMC,iCAAwE,GAAG;EACtFC,QAAQ,eAAEJ,aAAa,CAAC;IACtBK,WAAW,EAAE,EADS;IAEtBC,OAAO,EAAE;EAFa,CAAD;AAD+D,CAAjF;AAOP,OAAO,MAAMC,yCAAsF,GAAG,QAGhG;EAAA,IAHiG;IACrGC,QADqG;IAErGF;EAFqG,CAGjG;EACJ,MAAM;IAAEG;EAAF,IAAcP,eAAe,EAAnC;EAEA,oBACE,oBAAC,cAAD,qBACE,oBAAC,iCAAD,CAAmC,QAAnC,CAA4C,QAA5C;IACE,KAAK,EAAE;MAAEI,OAAF;MAAWD,WAAW,EAAEI,OAAO,CAACC,2BAAR,CAAoCC;IAA5D;EADT,GAGGH,QAHH,CADF,CADF;AASD,CAfM"}