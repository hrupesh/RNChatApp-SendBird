{"version":3,"names":["React","createContext","ProviderLayout","useLocalization","GroupChannelOperatorsContexts","Fragment","headerTitle","channel","GroupChannelOperatorsContextsProvider","children","STRINGS","GROUP_CHANNEL_OPERATORS","HEADER_TITLE"],"sources":["moduleContext.tsx"],"sourcesContent":["import React, { createContext } from 'react';\n\nimport type { SendbirdGroupChannel } from '@sendbird/uikit-utils';\n\nimport ProviderLayout from '../../../components/ProviderLayout';\nimport { useLocalization } from '../../../hooks/useContext';\nimport type { GroupChannelOperatorsContextsType, GroupChannelOperatorsModule } from '../types';\n\nexport const GroupChannelOperatorsContexts: GroupChannelOperatorsContextsType = {\n  Fragment: createContext({\n    headerTitle: '',\n    channel: {} as SendbirdGroupChannel,\n  }),\n};\n\nexport const GroupChannelOperatorsContextsProvider: GroupChannelOperatorsModule['Provider'] = ({\n  channel,\n  children,\n}) => {\n  const { STRINGS } = useLocalization();\n  return (\n    <ProviderLayout>\n      <GroupChannelOperatorsContexts.Fragment.Provider\n        value={{ headerTitle: STRINGS.GROUP_CHANNEL_OPERATORS.HEADER_TITLE, channel }}\n      >\n        {children}\n      </GroupChannelOperatorsContexts.Fragment.Provider>\n    </ProviderLayout>\n  );\n};\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAIA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAASC,eAAT,QAAgC,2BAAhC;AAGA,OAAO,MAAMC,6BAAgE,GAAG;EAC9EC,QAAQ,eAAEJ,aAAa,CAAC;IACtBK,WAAW,EAAE,EADS;IAEtBC,OAAO,EAAE;EAFa,CAAD;AADuD,CAAzE;AAOP,OAAO,MAAMC,qCAA8E,GAAG,QAGxF;EAAA,IAHyF;IAC7FD,OAD6F;IAE7FE;EAF6F,CAGzF;EACJ,MAAM;IAAEC;EAAF,IAAcP,eAAe,EAAnC;EACA,oBACE,oBAAC,cAAD,qBACE,oBAAC,6BAAD,CAA+B,QAA/B,CAAwC,QAAxC;IACE,KAAK,EAAE;MAAEG,WAAW,EAAEI,OAAO,CAACC,uBAAR,CAAgCC,YAA/C;MAA6DL;IAA7D;EADT,GAGGE,QAHH,CADF,CADF;AASD,CAdM"}