{"version":3,"names":["React","useCallback","FlatList","useSafeAreaInsets","PushTriggerOption","useActionMenu","useToast","PASS","getChannelUniqId","useFreshCallback","useLocalization","useSendbirdChat","GroupChannelListList","renderGroupChannelPreview","groupChannels","onLoadNext","flatListProps","menuItemCreator","toast","openMenu","STRINGS","sdk","currentUser","onLongPress","channel","action","myPushTriggerOption","menuItem","title","GROUP_CHANNEL_LIST","DIALOG_CHANNEL_TITLE","userId","menuItems","DIALOG_CHANNEL_NOTIFICATION","onPress","setMyPushTriggerOption","DEFAULT","OFF","onError","show","TOAST","TURN_ON_NOTIFICATIONS_ERROR","TURN_OFF_NOTIFICATIONS_ERROR","DIALOG_CHANNEL_LEAVE","leave","then","clearCachedMessages","url","catch","LEAVE_CHANNEL_ERROR","renderItem","item","left","right","contentContainerStyle","paddingLeft","paddingRight"],"sources":["GroupChannelListList.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { FlatList, ListRenderItem } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { PushTriggerOption } from '@sendbird/chat';\nimport { useActionMenu, useToast } from '@sendbird/uikit-react-native-foundation';\nimport { PASS, SendbirdGroupChannel, getChannelUniqId, useFreshCallback } from '@sendbird/uikit-utils';\n\nimport { useLocalization, useSendbirdChat } from '../../../hooks/useContext';\nimport type { GroupChannelListProps } from '../types';\n\nconst GroupChannelListList = ({\n  renderGroupChannelPreview,\n  groupChannels,\n  onLoadNext,\n  flatListProps,\n  menuItemCreator = PASS,\n}: GroupChannelListProps['List']) => {\n  const toast = useToast();\n  const { openMenu } = useActionMenu();\n  const { STRINGS } = useLocalization();\n  const { sdk, currentUser } = useSendbirdChat();\n\n  const onLongPress = useFreshCallback((channel: SendbirdGroupChannel) => {\n    const action = channel.myPushTriggerOption === 'off' ? 'on' : 'off';\n    const menuItem = menuItemCreator({\n      title: STRINGS.GROUP_CHANNEL_LIST.DIALOG_CHANNEL_TITLE(currentUser?.userId ?? '', channel),\n      menuItems: [\n        {\n          title: STRINGS.GROUP_CHANNEL_LIST.DIALOG_CHANNEL_NOTIFICATION(channel),\n          onPress: async () => {\n            if (action === 'on') {\n              await channel.setMyPushTriggerOption(PushTriggerOption.DEFAULT);\n            } else {\n              await channel.setMyPushTriggerOption(PushTriggerOption.OFF);\n            }\n          },\n          onError: () => {\n            toast.show(\n              action === 'on' ? STRINGS.TOAST.TURN_ON_NOTIFICATIONS_ERROR : STRINGS.TOAST.TURN_OFF_NOTIFICATIONS_ERROR,\n              'error',\n            );\n          },\n        },\n        {\n          title: STRINGS.GROUP_CHANNEL_LIST.DIALOG_CHANNEL_LEAVE,\n          onPress: async () => {\n            channel.leave().then(() => sdk.clearCachedMessages([channel.url]).catch());\n          },\n          onError: () => toast.show(STRINGS.TOAST.LEAVE_CHANNEL_ERROR, 'error'),\n        },\n      ],\n    });\n\n    openMenu(menuItem);\n  });\n\n  const renderItem: ListRenderItem<SendbirdGroupChannel> = useCallback(\n    ({ item }) => renderGroupChannelPreview?.(item, () => onLongPress(item)),\n    [renderGroupChannelPreview, onLongPress],\n  );\n\n  const { left, right } = useSafeAreaInsets();\n  return (\n    <FlatList\n      bounces={false}\n      data={groupChannels}\n      renderItem={renderItem}\n      onEndReached={onLoadNext}\n      {...flatListProps}\n      contentContainerStyle={[flatListProps?.contentContainerStyle, { paddingLeft: left, paddingRight: right }]}\n      keyExtractor={getChannelUniqId}\n    />\n  );\n};\n\nexport default GroupChannelListList;\n"],"mappings":"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"}