{"version":3,"names":["React","useCallback","useState","useAppFeatures","confirmAndMarkAsDelivered","useAppState","useForceUpdate","SendbirdChatContext","createContext","SendbirdChatProvider","children","sdkInstance","emojiManager","mentionManager","imageCompressionConfig","enableAutoPushTokenRegistration","enableChannelListMessageReceiptStatus","enableChannelListTypingIndicator","enableUseUserIdForNickname","enableUserMention","enableImageCompression","currentUser","_setCurrentUser","forceUpdate","appFeatures","setCurrentUser","user","updateCurrentUserInfo","nickname","profile","Error","params","profileUrl","profileImage","markAsDeliveredWithChannel","channel","deliveryReceiptEnabled","status","connectionState","setForegroundState","setBackgroundState","value","sdk","features","autoPushTokenRegistrationEnabled","channelListTypingIndicatorEnabled","channelListMessageReceiptStatusEnabled","useUserIdForNicknameEnabled","userMentionEnabled","imageCompressionEnabled"],"sources":["SendbirdChatCtx.tsx"],"sourcesContent":["import React, { useCallback, useState } from 'react';\n\nimport { useAppFeatures } from '@sendbird/uikit-chat-hooks';\nimport type {\n  SendbirdChatSDK,\n  SendbirdGroupChannel,\n  SendbirdUser,\n  SendbirdUserUpdateParams,\n} from '@sendbird/uikit-utils';\nimport { confirmAndMarkAsDelivered, useAppState, useForceUpdate } from '@sendbird/uikit-utils';\n\nimport type EmojiManager from '../libs/EmojiManager';\nimport type ImageCompressionConfig from '../libs/ImageCompressionConfig';\nimport type MentionManager from '../libs/MentionManager';\nimport type { FileType } from '../platform/types';\n\nexport interface UIKitFeaturesInSendbirdChatContext {\n  enableAutoPushTokenRegistration: boolean;\n  enableChannelListTypingIndicator: boolean;\n  enableChannelListMessageReceiptStatus: boolean;\n  enableUseUserIdForNickname: boolean;\n  enableUserMention: boolean;\n  enableImageCompression: boolean;\n}\n\ninterface Props extends UIKitFeaturesInSendbirdChatContext, React.PropsWithChildren {\n  sdkInstance: SendbirdChatSDK;\n  emojiManager: EmojiManager;\n  mentionManager: MentionManager;\n  imageCompressionConfig: ImageCompressionConfig;\n}\n\nexport type SendbirdChatContextType = {\n  sdk: SendbirdChatSDK;\n  emojiManager: EmojiManager;\n  mentionManager: MentionManager;\n  imageCompressionConfig: ImageCompressionConfig;\n  currentUser?: SendbirdUser;\n  setCurrentUser: React.Dispatch<React.SetStateAction<SendbirdUser | undefined>>;\n\n  // helper functions\n  updateCurrentUserInfo: (nickname?: string, profile?: string | FileType) => Promise<SendbirdUser>;\n  markAsDeliveredWithChannel: (channel: SendbirdGroupChannel) => void;\n\n  features: {\n    // UIKit features\n    autoPushTokenRegistrationEnabled: boolean;\n    channelListTypingIndicatorEnabled: boolean;\n    channelListMessageReceiptStatusEnabled: boolean;\n    useUserIdForNicknameEnabled: boolean;\n    userMentionEnabled: boolean;\n    imageCompressionEnabled: boolean;\n\n    // Sendbird application features\n    deliveryReceiptEnabled: boolean;\n    broadcastChannelEnabled: boolean;\n    superGroupChannelEnabled: boolean;\n    reactionEnabled: boolean;\n  };\n};\n\nexport const SendbirdChatContext = React.createContext<SendbirdChatContextType | null>(null);\nexport const SendbirdChatProvider = ({\n  children,\n  sdkInstance,\n  emojiManager,\n  mentionManager,\n  imageCompressionConfig,\n  enableAutoPushTokenRegistration,\n  enableChannelListMessageReceiptStatus,\n  enableChannelListTypingIndicator,\n  enableUseUserIdForNickname,\n  enableUserMention,\n  enableImageCompression,\n}: Props) => {\n  const [currentUser, _setCurrentUser] = useState<SendbirdUser>();\n  const forceUpdate = useForceUpdate();\n  const appFeatures = useAppFeatures(sdkInstance);\n\n  const setCurrentUser: SendbirdChatContextType['setCurrentUser'] = useCallback((user) => {\n    // NOTE: Sendbird SDK handle User object is always same object, so force update after setCurrentUser\n    _setCurrentUser(user);\n    forceUpdate();\n  }, []);\n\n  const updateCurrentUserInfo: SendbirdChatContextType['updateCurrentUserInfo'] = useCallback(\n    async (nickname, profile) => {\n      let user = currentUser;\n\n      if (!user) throw new Error('Current user is not defined, please connect using `useConnection()` hook first');\n\n      const params: SendbirdUserUpdateParams = {};\n\n      if (!nickname) {\n        params.nickname = user.nickname;\n      } else {\n        params.nickname = nickname;\n      }\n\n      if (!profile) {\n        params.profileUrl = user.profileUrl;\n      } else if (typeof profile === 'string') {\n        params.profileUrl = profile;\n      } else if (typeof profile === 'object') {\n        params.profileImage = profile;\n      } else {\n        throw new Error(`Cannot update profile, not supported profile type(${typeof profile})`);\n      }\n\n      user = await sdkInstance.updateCurrentUserInfo(params);\n\n      setCurrentUser(user);\n      return user;\n    },\n    [sdkInstance, currentUser, setCurrentUser],\n  );\n\n  const markAsDeliveredWithChannel: SendbirdChatContextType['markAsDeliveredWithChannel'] = useCallback(\n    (channel: SendbirdGroupChannel) => {\n      if (appFeatures.deliveryReceiptEnabled) confirmAndMarkAsDelivered([channel]);\n    },\n    [sdkInstance, appFeatures.deliveryReceiptEnabled],\n  );\n\n  useAppState('change', (status) => {\n    // 'active' | 'background' | 'inactive' | 'unknown' | 'extension';\n    if (status === 'active') sdkInstance.connectionState === 'CLOSED' && sdkInstance.setForegroundState();\n    else if (status === 'background') sdkInstance.connectionState === 'OPEN' && sdkInstance.setBackgroundState();\n  });\n\n  const value: SendbirdChatContextType = {\n    sdk: sdkInstance,\n    emojiManager,\n    mentionManager,\n    imageCompressionConfig,\n    currentUser,\n    setCurrentUser,\n\n    updateCurrentUserInfo,\n    markAsDeliveredWithChannel,\n\n    features: {\n      ...appFeatures,\n      autoPushTokenRegistrationEnabled: enableAutoPushTokenRegistration,\n      channelListTypingIndicatorEnabled: enableChannelListTypingIndicator,\n      channelListMessageReceiptStatusEnabled: enableChannelListMessageReceiptStatus,\n      useUserIdForNicknameEnabled: enableUseUserIdForNickname,\n      userMentionEnabled: enableUserMention,\n      imageCompressionEnabled: enableImageCompression,\n    },\n  };\n\n  return <SendbirdChatContext.Provider value={value}>{children}</SendbirdChatContext.Provider>;\n};\n"],"mappings":"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"}