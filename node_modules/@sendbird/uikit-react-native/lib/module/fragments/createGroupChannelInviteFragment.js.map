{"version":3,"names":["React","useCallback","TouchableOpacity","useUserList","StatusComposition","UserSelectableBar","createUserListModule","useLocalization","useSendbirdChat","createGroupChannelInviteFragment","initModule","UserListModule","channel","onPressHeaderLeft","onInviteMembers","sortComparator","queryCreator","renderUser","sdk","STRINGS","users","refreshing","refresh","next","error","loading","memberIds","shouldFilterMember","members","map","it","userId","_renderUser","user","selectedUsers","setSelectedUsers","hasRequiredKey","Object","hasOwn","Error","userIdxInMembers","indexOf","userIdxInSelectedUsers","findIndex","isMember","isSelected","draft","splice","push","profileUrl","nickname","LABELS","USER_NO_NAME","GROUP_CHANNEL_INVITE","HEADER_RIGHT","HEADER_TITLE","userIds","updatedChannel","inviteWithUserIds","Boolean","isSuper","isBroadcast"],"sources":["createGroupChannelInviteFragment.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport { TouchableOpacity } from 'react-native';\n\nimport { useUserList } from '@sendbird/uikit-chat-hooks';\nimport type { SendbirdGroupChannel, SendbirdUser, UserStruct } from '@sendbird/uikit-utils';\n\nimport StatusComposition from '../components/StatusComposition';\nimport UserSelectableBar from '../components/UserSelectableBar';\nimport type { GroupChannelInviteFragment } from '../domain/groupChannelUserList/types';\nimport createUserListModule from '../domain/userList/module/createUserListModule';\nimport type { UserListModule } from '../domain/userList/types';\nimport { useLocalization, useSendbirdChat } from '../hooks/useContext';\n\nconst createGroupChannelInviteFragment = <UserType extends UserStruct>(\n  initModule?: Partial<UserListModule<UserType>>,\n): GroupChannelInviteFragment<UserType> => {\n  const UserListModule = createUserListModule<UserType>(initModule);\n\n  return ({ channel, onPressHeaderLeft, onInviteMembers, sortComparator, queryCreator, renderUser }) => {\n    const { sdk } = useSendbirdChat();\n    const { STRINGS } = useLocalization();\n    const { users, refreshing, refresh, next, error, loading } = useUserList(sdk, {\n      queryCreator,\n      sortComparator,\n    });\n\n    const memberIds = shouldFilterMember(channel) ? channel.members.map((it) => it.userId) : [];\n\n    const _renderUser: NonNullable<typeof renderUser> = useCallback(\n      (user, selectedUsers, setSelectedUsers) => {\n        if (queryCreator && !renderUser) {\n          const hasRequiredKey = Object.hasOwn(user, 'profileUrl') && Object.hasOwn(user, 'nickname');\n          if (!hasRequiredKey) throw new Error('You should provide \"renderUser\" when providing \"queryCreator\"');\n        }\n\n        if (renderUser) return renderUser(user, selectedUsers, setSelectedUsers);\n\n        const userIdxInMembers = memberIds.indexOf(user.userId);\n        const userIdxInSelectedUsers = selectedUsers.findIndex((it) => it.userId === user.userId);\n\n        const isMember = userIdxInMembers > -1;\n        const isSelected = userIdxInSelectedUsers > -1;\n\n        return (\n          <TouchableOpacity\n            activeOpacity={0.7}\n            disabled={isMember}\n            onPress={() => {\n              setSelectedUsers(([...draft]) => {\n                if (isSelected) draft.splice(userIdxInSelectedUsers, 1);\n                else draft.push(user);\n                return draft;\n              });\n            }}\n          >\n            <UserSelectableBar\n              uri={(user as unknown as SendbirdUser).profileUrl}\n              name={(user as unknown as SendbirdUser).nickname || STRINGS.LABELS.USER_NO_NAME}\n              selected={isMember || isSelected}\n              disabled={isMember}\n            />\n          </TouchableOpacity>\n        );\n      },\n      [channel, renderUser, queryCreator],\n    );\n\n    return (\n      <UserListModule.Provider\n        headerRight={(selectedUsers) => STRINGS.GROUP_CHANNEL_INVITE.HEADER_RIGHT({ selectedUsers })}\n        headerTitle={STRINGS.GROUP_CHANNEL_INVITE.HEADER_TITLE}\n      >\n        <UserListModule.Header\n          onPressHeaderLeft={onPressHeaderLeft}\n          onPressHeaderRight={async (users) => {\n            const userIds = users.map((it) => it.userId);\n            const updatedChannel = await channel.inviteWithUserIds(userIds);\n            onInviteMembers(updatedChannel);\n          }}\n        />\n        <StatusComposition\n          loading={loading}\n          error={Boolean(error)}\n          LoadingComponent={<UserListModule.StatusLoading />}\n          ErrorComponent={<UserListModule.StatusError onPressRetry={() => refresh()} />}\n        >\n          <UserListModule.List\n            onLoadNext={next}\n            users={users}\n            renderUser={_renderUser}\n            onRefresh={refresh}\n            refreshing={refreshing}\n            ListEmptyComponent={<UserListModule.StatusEmpty />}\n          />\n        </StatusComposition>\n      </UserListModule.Provider>\n    );\n  };\n};\n\nfunction shouldFilterMember(channel: SendbirdGroupChannel) {\n  return !channel.isSuper && !channel.isBroadcast;\n}\n\nexport default createGroupChannelInviteFragment;\n"],"mappings":"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"}