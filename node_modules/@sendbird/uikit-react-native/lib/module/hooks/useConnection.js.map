{"version":3,"names":["useCallback","Logger","useSendbirdChat","usePushTokenRegistration","cacheRestrictCodes","useConnection","sdk","emojiManager","setCurrentUser","features","registerPushTokenForCurrentUser","unregisterPushTokenForCurrentUser","connect","userId","opts","debug","user","accessToken","nickname","updateCurrentUserInfo","then","updatedUser","catch","e","warn","useUserIdForNicknameEnabled","autoPushTokenRegistrationEnabled","getAllEmoji","init","error","isCacheEnabled","some","code","message","clearCachedData","currentUser","finally","disconnect","undefined","reconnect"],"sources":["useConnection.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { Logger, SendbirdError, SendbirdUser } from '@sendbird/uikit-utils';\n\nimport { useSendbirdChat } from './useContext';\nimport usePushTokenRegistration from './usePushTokenRegistration';\n\ntype ConnectOptions = { nickname?: string; accessToken?: string };\nconst cacheRestrictCodes = [400300, 400301, 400302, 400310];\n\nconst useConnection = () => {\n  const { sdk, emojiManager, setCurrentUser, features } = useSendbirdChat();\n  const { registerPushTokenForCurrentUser, unregisterPushTokenForCurrentUser } = usePushTokenRegistration();\n\n  const connect = useCallback(\n    async (userId: string, opts?: ConnectOptions): Promise<SendbirdUser> => {\n      try {\n        Logger.debug('[useConnection]', 'connect start:', userId);\n        let user = await sdk.connect(userId, opts?.accessToken);\n\n        if (opts?.nickname) {\n          Logger.debug('[useConnection]', 'nickname-sync start:', opts.nickname);\n          await sdk\n            .updateCurrentUserInfo({ nickname: opts.nickname })\n            .then((updatedUser) => (user = updatedUser))\n            .catch((e) => Logger.warn('[useConnection]', 'nickname-sync failure', e));\n        } else if (features.useUserIdForNicknameEnabled) {\n          await sdk.updateCurrentUserInfo({ nickname: userId }).then((updatedUser) => (user = updatedUser));\n        }\n\n        if (features.autoPushTokenRegistrationEnabled) {\n          Logger.debug('[useConnection]', 'autoPushTokenRegistration enabled, register for current user');\n          await registerPushTokenForCurrentUser().catch((e) => {\n            Logger.warn('[useConnection]', 'autoPushToken Registration failure', e);\n          });\n        }\n\n        Logger.debug('[useConnection]', 'connected! (online)');\n        setCurrentUser(user);\n        sdk.getAllEmoji().then(emojiManager.init);\n\n        return user;\n      } catch (e) {\n        const error = e as unknown as SendbirdError;\n\n        if (sdk.isCacheEnabled) {\n          if (cacheRestrictCodes.some((code) => error.code === code)) {\n            Logger.warn('[useConnection]', 'offline connect restricted', error.message, error.code);\n            Logger.warn('[useConnection]', 'clear cached-data');\n            await sdk.clearCachedData().catch((e) => Logger.warn('[useConnection]', 'clear cached-data failure', e));\n          } else if (sdk.currentUser) {\n            Logger.debug('[useConnection]', 'connected! (offline)');\n            setCurrentUser(sdk.currentUser);\n            sdk.getAllEmoji().finally(emojiManager.init);\n            return sdk.currentUser;\n          }\n        }\n\n        Logger.warn('[useConnection]', 'connect failure', error.message, error.code);\n        throw error;\n      }\n    },\n    [sdk, registerPushTokenForCurrentUser, features.autoPushTokenRegistrationEnabled],\n  );\n\n  const disconnect = useCallback(async () => {\n    Logger.debug('[useConnection]', 'disconnect start');\n\n    if (features.autoPushTokenRegistrationEnabled) {\n      Logger.debug('[useConnection]', 'autoPushTokenRegistration enabled, unregister for current user');\n      await unregisterPushTokenForCurrentUser().catch((e) => {\n        Logger.warn('[useConnection]', 'autoPushToken unregister failure', e);\n      });\n    }\n\n    await sdk.disconnect().then(() => setCurrentUser(undefined));\n    Logger.debug('[useConnection]', 'disconnected!');\n  }, [sdk, unregisterPushTokenForCurrentUser, features.autoPushTokenRegistrationEnabled]);\n\n  return { connect, disconnect, reconnect: () => sdk.reconnect() };\n};\n\nexport default useConnection;\n"],"mappings":"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"}